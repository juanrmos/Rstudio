{
  "hash": "728e2e9968b6201e7bb4a29b081665a5",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\n# Cargar librerías necesarias\nlibrary(readxl)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggrepel)\nlibrary(patchwork)\n\n\n# 1. LIMPIEZA Y PREPARACIÓN DE DATOS\n# ==================================\n\n# Cargar los datos\ndatos <- read_excel(\"GRH.xls\")\n\n\n# Corregir nombres de columnas (quitar acentos y caracteres especiales)\nnames(datos) <- c(\"N\", \"Entidad\", \"Tipo_Orden\", \"Numero_Orden\", \"Tipo_Contratacion\",\n                  \"Fecha_Emision\", \"Fecha_Compromiso\", \"Monto\", \"RUC\", \n                  \"Razon_Social\", \"Estado\", \"Estado_Registro\", \"Observaciones\")\n\n# Convertir fechas a formato Date\ndatos <- datos %>%\n  mutate(\n    Fecha_Emision = dmy(Fecha_Emision),\n    Fecha_Compromiso = dmy(Fecha_Compromiso)\n  )\n\n# Convertir montos a numérico\ndatos <- datos %>%\n  mutate(\n    Monto_limpio = as.numeric(gsub(\",\", \"\", gsub(\"^S/\\\\. \", \"\", Monto)))\n  )\n\n\n\n# Eliminar filas con montos nulos si las hay\ndatos <- datos %>% filter(!is.na(Monto_limpio))\ndatos <- datos %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 15, \n                               paste0(substr(Razon_Social, 1, 12), \"...\"), \n                               Razon_Social))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_general <- sum(datos$Monto_limpio)\n\n# Luego calculamos el top 5 y los porcentajes\ntop5_proveedores <- datos %>%\n  group_by(Razon_Social) %>%\n  summarise(Monto_Total = sum(Monto_limpio)) %>%\n  arrange(desc(Monto_Total)) %>%\n  mutate(Porcentaje = Monto_Total / total_general * 100) %>%  \n  slice_head(n = 5)\n\nggplot(top5_proveedores, aes(x = reorder(Razon_Social, Monto_Total), y = Monto_Total, fill = Razon_Social)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  geom_text(aes(label = paste0(round(Porcentaje, 1), \"%\")), hjust = -0.2) +\n  labs(title = \"Top 5 Proveedores por Monto y % del Total\",\n       x = \"Proveedor\", y = \"Monto Total (S/.)\") +\n  scale_y_continuous(labels = comma) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preparar datos para curva de Pareto\npareto <- datos %>%\n  group_by(Razon_Social) %>%\n  summarise(Monto_Total = sum(Monto_limpio)) %>%\n  arrange(desc(Monto_Total)) %>%\n  mutate(\n    Acumulado = cumsum(Monto_Total),\n    Porcentaje_Acum = Acumulado / sum(Monto_Total) * 100,\n    Proveedor_ID = row_number()\n  )\n\n# Gráfico de Pareto corregido\nggplot(pareto, aes(x = Proveedor_ID)) +\n  geom_bar(aes(y = Monto_Total), stat = \"identity\", fill = \"steelblue\", alpha = 0.7) +\n  geom_line(aes(y = Acumulado * max(Monto_Total) / max(Acumulado)), \n            color = \"red\", linewidth = 1) +\n  geom_point(aes(y = Acumulado * max(Monto_Total) / max(Acumulado)), \n             color = \"red\", size = 2) +\n  scale_y_continuous(\n    name = \"Monto por Proveedor (S/.)\",\n    labels = comma,\n    sec.axis = sec_axis(\n      ~ . / max(pareto$Monto_Total) * 100, \n      name = \"Porcentaje Acumulado (%)\",\n      labels = function(x) paste0(round(x, 1), \"%\")\n    )\n  ) +\n  labs(\n    title = \"Curva de Pareto de Proveedores\",\n    x = \"Proveedores (ordenados por monto)\",\n    caption = \"Las barras muestran el monto individual, la línea roja muestra el acumulado\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.title = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproveedores <- datos %>%\n  group_by(Nombre_Corto) %>%\n  summarise(\n    Ordenes = n(),\n    Monto_Total = sum(Monto_limpio)\n  ) %>%\n  arrange(desc(Ordenes))\n\nggplot(proveedores %>% filter(Ordenes > 1), \n       aes(x = reorder(Nombre_Corto, Ordenes), y = Ordenes, fill = Ordenes)) +\n  geom_col() +\n  geom_text(aes(label = paste0(Ordenes, \" ord. | S/ \", comma(round(Monto_Total,0)))),\n            hjust = -0.1, size = 3.2) +\n  coord_flip() +\n  labs(title = \"Proveedores con más de una orden en el mes\",\n       x = \"Proveedor\", y = \"Cantidad de Órdenes\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  scale_y_continuous(expand = expansion(mult = c(0,0.15))) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.text.y = element_text(size = 9),\n    plot.margin = margin(5.5, 15, 5.5, 5.5, \"pt\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clasificación por tipo de RUC\ndatos <- datos %>%\n  mutate(Tipo_Proveedor = case_when(\n    str_starts(RUC, \"10\") ~ \"Persona Natural\",\n    str_starts(RUC, \"20\") ~ \"Persona Jurídica\",\n    TRUE ~ \"Otro\"\n  ))\n\n# Distribución de montos por tipo de proveedor\ntotal_general <- sum(datos$Monto_limpio)\n\ndist_tipo <- datos %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(Monto_Total = sum(Monto_limpio)) %>%\n  mutate(\n    Porcentaje = Monto_Total / total_general * 100,\n    Etiqueta = paste0(\"S/ \", comma(round(Monto_Total,0)), \n                      \" (\", round(Porcentaje,1), \"%)\")\n  )\n\n\n# Gráfico circular mejorado con montos y porcentajes\nggplot(dist_tipo, aes(x = \"\", y = Monto_Total, fill = Tipo_Proveedor)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\") +\n  geom_text(aes(label = Etiqueta), \n            position = position_stack(vjust = 0.5),\n            color = \"white\", fontface = \"bold\", size = 4.2) +\n  labs(title = \"Distribución del Gasto por Tipo de Proveedor\",\n       fill = \"Tipo de Proveedor\") +\n  scale_fill_manual(values = c(\"Persona Natural\" = \"#3498db\", \n                               \"Persona Jurídica\" = \"#e74c3c\", \n                               \"Otro\" = \"#95a5a6\")) +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_text(face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Órdenes por día (filtrando fechas válidas)\nordenes_por_dia <- datos %>%\n  filter(!is.na(Fecha_Emision)) %>%  # Eliminar fechas nulas\n  group_by(Fecha_Emision) %>%\n  summarise(\n    Ordenes = n(),\n    Monto_Total = sum(Monto_limpio)\n  ) %>%\n  arrange(Fecha_Emision)  # Ordenar por fecha\n\n# Calcular factor de escalado dinámico\nfactor_escala <- max(ordenes_por_dia$Ordenes) / max(ordenes_por_dia$Monto_Total)\n\n# Gráfico combinado: barras para cantidad, línea para monto\nggplot(ordenes_por_dia, aes(x = Fecha_Emision)) +\n  geom_col(aes(y = Ordenes), fill = \"steelblue\", alpha = 0.7) +\n  geom_line(aes(y = Monto_Total * factor_escala), color = \"red\", linewidth = 1) +\n  geom_point(aes(y = Monto_Total * factor_escala), color = \"red\", size = 2) +\n  scale_x_date(date_breaks = \"1 week\", date_labels = \"%d/%m\") +  # Formato de fechas\n  scale_y_continuous(\n    name = \"Número de Órdenes\",\n    sec.axis = sec_axis(\n      ~ . / factor_escala, \n      name = \"Monto Total (S/.)\", \n      labels = function(x) paste0(\"S/. \", comma(x))\n    )\n  ) +\n  labs(\n    title = \"Órdenes y Monto Total por Día\",\n    subtitle = \"Barras azules: cantidad de órdenes | Línea roja: monto total\",\n    x = \"Fecha de Emisión\",\n    caption = \"Nota: Los dos ejes tienen escalas diferentes\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11, color = \"gray60\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear semana del mes (con filtro de fechas válidas)\ndatos <- datos %>%\n  filter(!is.na(Fecha_Emision)) %>%  # Filtrar fechas nulas\n  mutate(Semana = paste0(\"Semana \", ceiling(day(Fecha_Emision) / 7)))\n\n# Resumen por semana\nresumen_semana <- datos %>%\n  group_by(Semana) %>%\n  summarise(\n    Ordenes = n(),\n    Monto_Total = sum(Monto_limpio)\n  ) %>%\n  # Ordenar semanas correctamente\n  mutate(Semana_num = as.numeric(str_extract(Semana, \"\\\\d+\"))) %>%\n  arrange(Semana_num) %>%\n  select(-Semana_num)\n\nprint(resumen_semana)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Semana   Ordenes Monto_Total\n  <chr>      <int>       <dbl>\n1 Semana 1      32     236773.\n2 Semana 2      37     235786.\n3 Semana 3      30     191286 \n4 Semana 4      27     184301.\n5 Semana 5      11      46386.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Gráfico de barras mejorado\nggplot(resumen_semana, aes(x = factor(Semana, levels = paste0(\"Semana \", 1:5)), \n                           y = Monto_Total, fill = Semana)) +\n  geom_col(alpha = 0.8) +\n  geom_text(aes(label = paste0(\"S/. \", comma(Monto_Total))), \n            vjust = -0.3, fontface = \"bold\", size = 3.5) +\n  geom_text(aes(label = paste0(\"(\", Ordenes, \" órdenes)\")), \n            vjust = 1.5, color = \"white\", fontface = \"bold\", size = 3) +\n  labs(title = \"Monto Total por Semana\",\n       subtitle = \"Muestra monto total y cantidad de órdenes por semana\",\n       x = \"Semana\", y = \"Monto Total (S/.)\") +\n  scale_y_continuous(labels = function(x) paste0(\"S/. \", comma(x)),\n                    expand = expansion(mult = c(0, 0.1))) +  # Más espacio arriba para etiquetas\n  scale_fill_brewer(type = \"qual\", palette = \"Set2\") +  # Colores más atractivos\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11, color = \"gray60\"),\n    axis.text.x = element_text(size = 11),\n    axis.title = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular diferencia en días (con filtros y validaciones)\ndatos <- datos %>%\n  filter(!is.na(Fecha_Emision) & !is.na(Fecha_Compromiso)) %>%  # Filtrar fechas nulas\n  mutate(Dias_Procesamiento = as.numeric(difftime(Fecha_Compromiso, Fecha_Emision, units = \"days\"))) %>%\n  # Filtrar valores extremos o negativos (opcional, según tu contexto)\n  filter(Dias_Procesamiento >= 0 & Dias_Procesamiento <= 365)  # Máximo 1 año\n\n\n# Histograma mejorado\nggplot(datos, aes(x = Dias_Procesamiento)) +\n  geom_histogram(binwidth = 1, fill = \"orange\", color = \"black\", alpha = 0.7) +\n  geom_vline(aes(xintercept = mean(Dias_Procesamiento, na.rm = TRUE)), \n             color = \"red\", linetype = \"dashed\", linewidth = 1) +\n  geom_vline(aes(xintercept = median(Dias_Procesamiento, na.rm = TRUE)), \n             color = \"blue\", linetype = \"dashed\", linewidth = 1) +\n  labs(\n    title = \"Distribución del Tiempo de Procesamiento de Órdenes\",\n    subtitle = \"Línea roja: promedio | Línea azul: mediana\",\n    x = \"Días entre Emisión y Compromiso\", \n    y = \"Cantidad de Órdenes\",\n    caption = paste0(\"n = \", nrow(datos), \" órdenes con fechas válidas\")\n  ) +\n  scale_x_continuous(breaks = seq(0, max(datos$Dias_Procesamiento, na.rm = TRUE), by = 5)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11, color = \"gray60\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatterplot monto vs tiempo\nggplot(datos, aes(x = Dias_Procesamiento, y = Monto_limpio)) +\n  geom_jitter(alpha = 0.6, color = \"steelblue\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +\n  labs(title = \"Relación entre Tiempo de Procesamiento y Monto\",\n       x = \"Días de Procesamiento\", y = \"Monto (S/.)\") +\n  scale_y_continuous(labels = comma) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Primero calcular el total de datos válidos\ndatos_validos <- datos %>% \n  filter(!is.na(Estado_Registro) & Estado_Registro != \"\")\n\ntotal_ordenes <- nrow(datos_validos)\n\ncumplimiento <- datos_validos %>%\n  mutate(\n    Registro_Oportuno = ifelse(Estado_Registro == \"Registrado dentro de plazo\", \"Sí\", \"No\")\n  ) %>%\n  group_by(Registro_Oportuno) %>%\n  summarise(Cantidad = n()) %>%\n  mutate(Porcentaje = Cantidad / total_ordenes * 100)  # Usar total_ordenes, no nrow(datos)\n\n\n# Verificación: los porcentajes deben sumar 100%\ncat(\"Verificación - Suma de porcentajes:\", sum(cumplimiento$Porcentaje), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVerificación - Suma de porcentajes: 100 %\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Total de órdenes analizadas:\", total_ordenes, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTotal de órdenes analizadas: 137 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Gráfico circular mejorado\nggplot(cumplimiento, aes(x = \"\", y = Porcentaje, fill = Registro_Oportuno)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\") +\n  geom_text(aes(label = paste0(round(Porcentaje, 1), \"%\\n(\", Cantidad, \" órdenes)\")),\n            position = position_stack(vjust = 0.5),\n            color = \"white\", fontface = \"bold\", size = 4) +\n  labs(\n    title = \"Cumplimiento de Plazos de Registro de Órdenes\",\n    subtitle = paste0(\"Total analizado: \", total_ordenes, \" órdenes\"),\n    fill = \"Registro Oportuno\"\n  ) +\n  scale_fill_manual(\n    values = c(\"No\" = \"#e74c3c\", \"Sí\" = \"#27ae60\"),  # Rojo para No, Verde para Sí\n    labels = c(\"No\" = \"Fuera de Plazo\", \"Sí\" = \"Dentro de Plazo\")\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 11, color = \"gray60\", hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_text(face = \"bold\"),\n    legend.text = element_text(size = 11)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtrar anuladas\nanuladas <- datos %>% filter(Estado == \"Anulada\")\n\n# Estadísticas básicas\ntotal_ordenes <- nrow(datos)\ntotal_anuladas <- nrow(anuladas)\nporcentaje_anuladas <- round((total_anuladas / total_ordenes) * 100, 2)\n\n    # Gráfico 2: Cantidad por tipo (si hay variedad)\n    if(nrow(anuladas) > 1) {\n      p2 <- ggplot(anuladas, aes(x = reorder(Tipo_Orden, Cantidad), \n                                         y = Cantidad, fill = Tipo_Orden)) +\n        geom_col(alpha = 0.8) +\n        geom_text(aes(label = Cantidad), hjust = -0.1, fontface = \"bold\") +\n        coord_flip() +\n        labs(title = \"Cantidad de Órdenes Anuladas por Tipo\",\n             x = \"Tipo de Orden\", y = \"Cantidad de Órdenes\") +\n        scale_y_continuous(expand = expansion(mult = c(0, 0.15))) +\n        theme_minimal() +\n        theme(legend.position = \"none\",\n              plot.title = element_text(face = \"bold\"))\n      \n      print(p2)\n    } else if(total_anuladas > 0) {\n    # Gráfico simple para pocos casos\n    ggplot(anuladas, aes(x = Tipo_Orden, y = Monto_limpio, fill = Tipo_Orden)) +\n      geom_col(alpha = 0.8) +\n      geom_text(aes(label = paste0(\"S/. \", comma(Monto_limpio))), \n                vjust = -0.3, fontface = \"bold\") +\n      labs(title = paste0(\"Órdenes Anuladas (\", total_anuladas, \" casos)\"),\n           x = \"Tipo de Orden\", y = \"Monto (S/.)\") +\n      scale_y_continuous(labels = function(x) paste0(\"S/. \", comma(x)),\n                        expand = expansion(mult = c(0, 0.15))) +\n      theme_minimal() +\n      theme(legend.position = \"none\",\n            plot.title = element_text(face = \"bold\"))\n  }\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Posible fraccionamiento en personas naturales\nfracc_naturales <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(Razon_Social, RUC) %>%\n  summarise(\n    Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Max = max(Monto_limpio),\n    .groups = \"drop\"\n  ) %>%\n  filter(Ordenes > 1 & Monto_Max < 39600) %>% # límite 8 UIT\n  arrange(desc(Monto_Total))\n\nprint(fracc_naturales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  Razon_Social                 RUC         Ordenes Monto_Total Monto_Max\n  <chr>                        <chr>         <int>       <dbl>     <dbl>\n1 VIGILIO VALDIVIA YAAN ROBERT 10721403314       2      29980     14990 \n2 COTRINA CABELLO DENIS FLORA  10470154999       3      20822     13800 \n3 INFANTE MALLMA MARICRUZ      10450019742       2       8000      6000 \n4 LAZARO TACUCHI PAVEL BERNABE 10418613691       3       5000      2800 \n5 CORAL SINARAGUA YAEL ROSA    10101333111       3       1466.      820.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Gráfico mejorado: cantidad de órdenes + monto total\nif(nrow(fracc_naturales) > 0){\n  ggplot(fracc_naturales, \n         aes(x = reorder(Razon_Social, Monto_Total), \n             y = Monto_Total, fill = Ordenes)) +\n    geom_col() +\n    geom_text(aes(label = paste0(\"S/ \", comma(round(Monto_Total,0)),\n                                 \" (\", Ordenes, \" ord.)\")),\n              hjust = -0.1, size = 3.5) +\n    coord_flip() +\n    labs(title = \"Personas Naturales con Múltiples Órdenes < 8 UIT (Posible Fraccionamiento)\",\n         x = \"Proveedor\", y = \"Monto Total (S/.)\") +\n    scale_y_continuous(labels = comma, expand = expansion(mult = c(0,0.15))) +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}