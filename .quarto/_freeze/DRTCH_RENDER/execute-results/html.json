{
  "hash": "fd0aa3a6ad433ced30975be68170aaf6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DRTC-H\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar librerías necesarias\nlibrary(readxl)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'igraph'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    crossing\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visNetwork)\n\n\n# 1. LIMPIEZA Y PREPARACIÓN DE DATOS\n\n\n# Cargar los datos\ndatos <- read_excel(\"DRTC-H.xlsx\")\n\n\n# Corregir nombres de columnas (quitar acentos y caracteres especiales)\nnames(datos) <- c(\"N\", \"Entidad\", \"Tipo_Orden\", \"Numero_Orden\", \"Tipo_Contratacion\",\n                  \"Fecha_Emision\", \"Fecha_Compromiso\", \"Monto\", \"RUC\", \n                  \"Razon_Social\", \"Estado\", \"Estado_Registro\", \"Observaciones\")\n\n# Convertir fechas a formato Date\ndatos <- datos %>%\n  mutate(\n    Fecha_Emision = as.Date(Fecha_Emision),\n    Fecha_Compromiso = as.Date(Fecha_Compromiso)\n  )\n\n\n# Convertir montos a numérico\ndatos <- datos %>%\n  mutate(\n    Monto_limpio = as.numeric(gsub(\",\", \"\", gsub(\"^S/\\\\. \", \"\", Monto)))\n  )\n\n\n\n# Eliminar filas con montos nulos si las hay\ndatos <- datos %>% filter(!is.na(Monto_limpio))\n\n\ndatos <- datos %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 15, \n                               paste0(substr(Razon_Social, 1, 12), \"...\"), \n                               Razon_Social))\ndatos <- datos %>%\n  mutate(Contratacion_Corto = ifelse(nchar(Tipo_Contratacion) > 20, \n                               paste0(substr(Tipo_Contratacion, 1, 15), \"...\"), \n                               Tipo_Contratacion))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 1. RESUMEN Y DESCRIPCIÓN DE DATOS\n# ========================================\n\ncat(\"\\n=====================================\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"1. RESUMEN ESTADÍSTICO GENERAL\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1. RESUMEN ESTADÍSTICO GENERAL\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"=====================================\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\n# Estadísticas básicas de montos\ncat(\"ESTADÍSTICAS DE MONTOS:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nESTADÍSTICAS DE MONTOS:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_montos <- summary(datos$Monto_limpio)\nprint(summary_montos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n     33    2000    3750   23920   10000 6100000 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\n\\nESTADÍSTICAS ADICIONALES:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nESTADÍSTICAS ADICIONALES:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nestadisticas_adicionales <- datos %>%\n  summarise(\n    Total_Ordenes = n(),\n    Total_Proveedores = n_distinct(RUC),\n    Total_Monto = sum(Monto_limpio),\n    Promedio_Orden = mean(Monto_limpio),\n    Mediana_Orden = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Coef_Variacion = sd(Monto_limpio) / mean(Monto_limpio) * 100,\n    Monto_Min = min(Monto_limpio),\n    Monto_Max = max(Monto_limpio),\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = IQR(Monto_limpio)\n  )\n\nprint(t(estadisticas_adicionales))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                          [,1]\nTotal_Ordenes     3.972000e+03\nTotal_Proveedores 1.193000e+03\nTotal_Monto       9.500877e+07\nPromedio_Orden    2.391963e+04\nMediana_Orden     3.750000e+03\nDesv_Estandar     1.494429e+05\nCoef_Variacion    6.247708e+02\nMonto_Min         3.304000e+01\nMonto_Max         6.100000e+06\nQ1                2.000000e+03\nQ3                1.000000e+04\nIQR               8.000000e+03\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# A. Índice de Herfindahl-Hirschman (IHH) para medir concentración del mercado\nconcentracion_proveedores <- datos %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Participacion_Mercado = (Monto_Total / sum(Monto_Total)) * 100,\n    Participacion_Cuadrado = Participacion_Mercado^2\n  ) %>%\n  arrange(desc(Monto_Total))\n\n# Calcular IHH (>2500 = altamente concentrado, señal de alerta)\nIHH <- sum(concentracion_proveedores$Participacion_Cuadrado)\nprint(paste(\"Índice Herfindahl-Hirschman:\", round(IHH, 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Índice Herfindahl-Hirschman: 177.14\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# B. Análisis de Pareto - 80/20\nconcentracion_proveedores <- concentracion_proveedores %>%\n  mutate(\n    Acumulado_Monto = cumsum(Monto_Total),\n    Porcentaje_Acumulado = (Acumulado_Monto / sum(Monto_Total)) * 100,\n    Ranking = row_number()\n  )\n\n# ¿Cuántos proveedores concentran el 80% del gasto?\nproveedores_80 <- concentracion_proveedores %>%\n  filter(Porcentaje_Acumulado <= 80) %>%\n  nrow()\n\nprint(paste(\"Proveedores que concentran 80% del gasto:\", proveedores_80))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Proveedores que concentran 80% del gasto: 141\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de concentración\ngrafico_pareto <- ggplot(concentracion_proveedores %>% head(20)) +\n  geom_col(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n               y = Monto_Total/1000000), \n           fill = \"#e74c3c\", alpha = 0.8) +\n  geom_line(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100,\n                group = 1), \n            color = \"#2c3e50\", linewidth = 1.2) +\n  geom_point(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                 y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100),\n             color = \"#2c3e50\", size = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~./max(concentracion_proveedores$Monto_Total/1000000)*100, \n                        name = \"% Acumulado\")\n  ) +\n  labs(title = \"Análisis de Pareto - Concentración de Proveedores\",\n       subtitle = paste(\"IHH =\", round(IHH, 0), \"- Mercado\", \n                       ifelse(IHH > 2500, \"ALTAMENTE CONCENTRADO\", \"moderado\")),\n       x = \"Proveedor\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngrafico_pareto\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nproveedores_sospechosos <- concentracion_proveedores %>%\n  mutate(\n    # Bandera 1: Proveedor nuevo con contratos grandes\n    Nueva_Empresa = as.numeric(Primera_Orden - as.Date(\"2023-01-01\")) < 365,\n    Contrato_Grande = Monto_Total > quantile(Monto_Total, 0.75),\n    \n    # Bandera 2: Solo una orden pero monto alto\n    Una_Sola_Orden = Num_Ordenes == 1,\n    Monto_Sospechoso = Monto_Total > quantile(Monto_Total, 0.90),\n    \n    # Bandera 3: Actividad concentrada en periodo corto\n    Dias_Activo = as.numeric(Ultima_Orden - Primera_Orden),\n    Actividad_Corta = Dias_Activo < 30 & Num_Ordenes > 1,\n    \n    # Score de riesgo\n    Score_Riesgo = Nueva_Empresa * 2 + Contrato_Grande + Una_Sola_Orden * 2 + \n                   Monto_Sospechoso * 3 + Actividad_Corta * 2\n  ) %>%\n  filter(Score_Riesgo >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Primera_Orden, \n         Dias_Activo, Score_Riesgo) %>%\n  arrange(desc(Score_Riesgo))\n\nprint(\"PROVEEDORES DE ALTO RIESGO (Posibles empresas fantasma):\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PROVEEDORES DE ALTO RIESGO (Posibles empresas fantasma):\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(proveedores_sospechosos, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 7\n           RUC Razon_Social    Monto_Total Num_Ordenes Primera_Orden Dias_Activo\n         <dbl> <chr>                 <dbl>       <int> <date>              <dbl>\n 1 20420515279 PARABOLA S.A.C.    1035264.           4 2022-12-01             28\n 2 20607166251 HOLDING IMPERI…    1025000            1 2023-10-12              0\n 3 20604048746 CONSTRUCTORA Y…     829692.           1 2022-12-19              0\n 4 20611620099 CONSORCIO VIAL…     766800            1 2023-10-12              0\n 5 20573014066 MEGA INVERSION…     682418.           2 2023-08-09             16\n 6 20611696851 CONSORCIO TINGO     583700            1 2023-11-09              0\n 7 20611676639 CONSORCIO BARU…     515577.           1 2023-11-09              0\n 8 20608078429 CONSULTOR¿A Y …     385200.           1 2023-08-09              0\n 9 20401900587 CEMENTO Y MATE…     370886.           3 2022-12-19              0\n10 20608515551 EMPRESA INGENI…     332000            1 2023-08-09              0\n# ℹ 1 more variable: Score_Riesgo <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Detectar órdenes fraccionadas (mismo proveedor, fechas cercanas, montos similares)\nfraccionamiento <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Monto_Anterior = lag(Monto_limpio),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    \n    # Detectar si es posible fraccionamiento\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE)\n\ncasos_fraccionamiento <- fraccionamiento %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos_Detectados = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos_Detectados))\n\nprint(\"POSIBLES CASOS DE FRACCIONAMIENTO:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"POSIBLES CASOS DE FRACCIONAMIENTO:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(casos_fraccionamiento, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n           RUC Razon_Social              Casos_Detectados Monto_Total_Fraccion…¹\n         <dbl> <chr>                                <int>                  <dbl>\n 1 20573209231 MAZZINI CORREDORES DE SE…                7                  9837.\n 2 20601368651 GRUPO JULIETT EMPRESA IN…                6                  4209.\n 3 10755546866 ESPIRITU MAIZ ZORAIDA ES…                5                  8786.\n 4 10761476080 MALPARTIDA RIVERA KENNY …                5                 15210 \n 5 20603702001 INVERSIONES DAJAZ SOCIED…                5                  4946.\n 6 10761616451 TRUJILLO RAMOS RENZO ELV…                4                  4477.\n 7 20103913340 ORVISA SOCIEDAD ANONIMA                  4                 16559.\n 8 20454073143 LA POSITIVA VIDA SEGUROS…                4                  4153.\n 9 20601946590 INVERSIONES IMPERIO SELV…                4                  4929.\n10 10417115141 CHAVEZ RIVERA SADITH BER…                3                112300 \n# ℹ abbreviated name: ¹​Monto_Total_Fraccionado\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 4. ANÁLISIS TEMPORAL DE ANOMALÍAS\n# ========================================\n\n# A. Detectar picos inusuales de gasto\nanalisis_temporal <- datos %>%\n  mutate(\n    Año_Mes = floor_date(Fecha_Emision, \"month\")\n  ) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Monto_Promedio_Orden = mean(Monto_limpio),\n    .groups = 'drop'\n  )\n\n# Calcular límites de control estadístico (3 sigmas)\nmedia_mensual <- mean(analisis_temporal$Monto_Mensual)\nsd_mensual <- sd(analisis_temporal$Monto_Mensual)\nlimite_superior <- media_mensual + 3 * sd_mensual\n\nmeses_anomalos <- analisis_temporal %>%\n  filter(Monto_Mensual > limite_superior) %>%\n  mutate(\n    Desviacion_Estandar = (Monto_Mensual - media_mensual) / sd_mensual\n  )\n\nprint(\"MESES CON GASTOS ANÓMALOS (>3 sigmas):\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"MESES CON GASTOS ANÓMALOS (>3 sigmas):\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(meses_anomalos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  Año_Mes    Monto_Mensual Num_Ordenes Monto_Promedio_Orden Desviacion_Estandar\n  <date>             <dbl>       <int>                <dbl>               <dbl>\n1 2024-12-01     16350028.         163              100307.                3.92\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# B. Análisis de estacionalidad sospechosa\ndatos_con_periodo <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Año = year(Fecha_Emision)\n  )\n\n# Detectar si hay concentración en fin de año (típico en malversación)\ngasto_fin_año <- datos_con_periodo %>%\n  filter(Mes %in% c(11,12)) %>%\n  group_by(Año) %>%\n  summarise(Monto_Fin_Año = sum(Monto_limpio))\n\ngasto_total_anual <- datos_con_periodo %>%\n  group_by(Año) %>%\n  summarise(Monto_Total_Año = sum(Monto_limpio))\n\nconcentracion_fin_año <- gasto_fin_año %>%\n  left_join(gasto_total_anual, by = \"Año\") %>%\n  mutate(\n    Porcentaje_Fin_Año = (Monto_Fin_Año / Monto_Total_Año) * 100\n  )\n\nprint(\"CONCENTRACIÓN DE GASTO EN FIN DE AÑO:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CONCENTRACIÓN DE GASTO EN FIN DE AÑO:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(concentracion_fin_año)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n    Año Monto_Fin_Año Monto_Total_Año Porcentaje_Fin_Año\n  <dbl>         <dbl>           <dbl>              <dbl>\n1  2022     12555359.       15860876.               79.2\n2  2023      7907951.       24968376.               31.7\n3  2024     18031044.       42787885.               42.1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 5. ANÁLISIS DE REDES Y COLUSIÓN\n# ========================================\n\n# Crear matriz de co-ocurrencia temporal\nventana_dias <- 30  # Ventana de tiempo para detectar co-ocurrencias\n\ncoocurrencias <- datos %>%\n  select(RUC, Fecha_Emision, Monto_limpio) %>%\n  cross_join(datos %>% select(RUC2 = RUC, Fecha2 = Fecha_Emision)) %>%\n  filter(\n    RUC != RUC2,\n    abs(as.numeric(Fecha_Emision - Fecha2)) <= ventana_dias\n  ) %>%\n  group_by(RUC, RUC2) %>%\n  summarise(\n    Veces_Juntos = n(),\n    .groups = 'drop'\n  ) %>%\n  filter(Veces_Juntos >= 3)  # Al menos 3 co-ocurrencias\n\n# Identificar clusters de proveedores\nif(nrow(coocurrencias) > 0) {\n  grafo <- graph_from_data_frame(coocurrencias, directed = FALSE)\n  comunidades <- cluster_louvain(grafo)\n  \n  clusters_sospechosos <- data.frame(\n    RUC = names(membership(comunidades)),\n    Cluster = membership(comunidades)\n  ) %>%\n    group_by(Cluster) %>%\n    summarise(\n      Miembros = n(),\n      RUCs = paste(RUC, collapse = \", \")\n    ) %>%\n    filter(Miembros >= 3)\n  \n  print(\"POSIBLES CARTELES (3+ proveedores relacionados):\")\n  print(clusters_sospechosos)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"POSIBLES CARTELES (3+ proveedores relacionados):\"\n# A tibble: 6 × 3\n  Cluster    Miembros RUCs                                                      \n  <membrshp>    <int> <chr>                                                     \n1 1               204 10001054622, 10040721172, 10095362198, 10102399248, 10181…\n2 2               111 10040111439, 10040127874, 10040747961, 10094582411, 10096…\n3 3               152 10040764441, 10040764459, 10074544253, 10210806771, 10224…\n4 4               222 10040826829, 10071897775, 10095683806, 10101333111, 10106…\n5 5               316 10065510613, 10075121810, 10079756062, 10096335810, 10096…\n6 6               174 10198710437, 10224059626, 10224091082, 10224204294, 10224…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 6. ANÁLISIS DE PRECIOS ANÓMALOS\n# ========================================\n\n# Agrupar por tipo de contratación para comparar precios\nanalisis_precios <- datos %>%\n  group_by(Tipo_Contratacion) %>%\n  mutate(\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = Q3 - Q1,\n    Limite_Superior = Q3 + 1.5 * IQR,\n    Limite_Inferior = Q1 - 1.5 * IQR,\n    Es_Outlier = Monto_limpio > Limite_Superior | Monto_limpio < Limite_Inferior\n  )\n\nordenes_precio_anomalo <- analisis_precios %>%\n  filter(Es_Outlier == TRUE) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion, \n         Fecha_Emision, Monto_limpio, Limite_Superior) %>%\n  mutate(\n    Sobreprecio_Porcentaje = ((Monto_limpio - Limite_Superior) / Limite_Superior) * 100\n  ) %>%\n  filter(Sobreprecio_Porcentaje > 0) %>%\n  arrange(desc(Sobreprecio_Porcentaje))\n\nprint(\"ÓRDENES CON SOBREPRECIOS DETECTADOS:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ÓRDENES CON SOBREPRECIOS DETECTADOS:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(ordenes_precio_anomalo, 15))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 8\n# Groups:   Tipo_Contratacion [4]\n   Numero_Orden         RUC Razon_Social         Tipo_Contratacion Fecha_Emision\n          <dbl>       <dbl> <chr>                <chr>             <date>       \n 1          262 15609751042 DE BELLEFROID D¿OUD… Deviene de Exone… 2024-10-23   \n 2          314 20285093245 ITALTRAC SELVA SAC   Deviene de Proce… 2024-12-18   \n 3          172 20285564973 DISTRIBUCIONES ESPI… Derivado de cont… 2023-07-19   \n 4           34 10198358318 EULOGIO FLORES CESA… Derivado de cont… 2022-03-16   \n 5         1009 20613590910 CONSORCIO VIAL MANZ… Deviene de Proce… 2024-12-29   \n 6          758 20613247760 CONSORCIO MANTENIMI… Deviene de Proce… 2024-10-23   \n 7          315 20100027021 UNIMAQ S.A.          Deviene de Proce… 2024-12-18   \n 8          235 20489320887 AUTOSERVICIOS PLAZA… Contrataciones h… 2025-08-26   \n 9          588 10707570518 MILLA HUIMAN CLAUDI… Contrataciones h… 2025-08-05   \n10          488 20612338893 METAL Y SOLUCIONES … Contrataciones h… 2025-06-11   \n11          223 10198358318 EULOGIO FLORES CESA… Derivado de cont… 2023-08-14   \n12          470 10469275561 ARBI CRESPO ROXANA … Contrataciones h… 2025-06-06   \n13          581 10427165961 ROBLES MENDOZA RUBEN Contrataciones h… 2025-08-04   \n14          617 20573181396 CORPORACION PARA LA… Contrataciones h… 2025-08-08   \n15          618 20573181396 CORPORACION PARA LA… Contrataciones h… 2025-08-08   \n# ℹ 3 more variables: Monto_limpio <dbl>, Limite_Superior <dbl>,\n#   Sobreprecio_Porcentaje <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ntop_sobreprecios <- ordenes_precio_anomalo %>%\n  arrange(desc(Sobreprecio_Porcentaje)) %>%\n  head(5) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion,\n         Fecha_Emision, Monto_limpio, Limite_Superior, Sobreprecio_Porcentaje)\n\n# Mostrar en consola\nprint(top_sobreprecios)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 8\n# Groups:   Tipo_Contratacion [3]\n  Numero_Orden     RUC Razon_Social Tipo_Contratacion Fecha_Emision Monto_limpio\n         <dbl>   <dbl> <chr>        <chr>             <date>               <dbl>\n1          262 1.56e10 DE BELLEFRO… Deviene de Exone… 2024-10-23        1691456 \n2          314 2.03e10 ITALTRAC SE… Deviene de Proce… 2024-12-18        6100000 \n3          172 2.03e10 DISTRIBUCIO… Derivado de cont… 2023-07-19          44714.\n4           34 1.02e10 EULOGIO FLO… Derivado de cont… 2022-03-16          36393.\n5         1009 2.06e10 CONSORCIO V… Deviene de Proce… 2024-12-29        2980000 \n# ℹ 2 more variables: Limite_Superior <dbl>, Sobreprecio_Porcentaje <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 7. ANÁLISIS DE CAMBIO DE GESTIÓN\n# ========================================\n\n# Comparar patrones antes y después del cambio de gestión (2023)\nantes_cambio <- datos %>%\n  filter(Fecha_Emision < as.Date(\"2023-01-01\"))\n\ndespues_cambio <- datos %>%\n  filter(Fecha_Emision >= as.Date(\"2022-01-01\"))\n\n# Proveedores nuevos post-cambio\nproveedores_nuevos <- despues_cambio %>%\n  filter(!(RUC %in% antes_cambio$RUC)) %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Aparicion = min(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\nprint(\"PROVEEDORES NUEVOS POST-CAMBIO DE GESTIÓN (Top 10):\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PROVEEDORES NUEVOS POST-CAMBIO DE GESTIÓN (Top 10):\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(proveedores_nuevos, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n           RUC Razon_Social            Monto_Total Num_Ordenes Primera_Aparicion\n         <dbl> <chr>                         <dbl>       <int> <date>           \n 1 20285093245 ITALTRAC SELVA SAC         6100000            1 2024-12-18       \n 2 20601724597 LEAN WORK SOCIEDAD ANO…    5030000            5 2023-11-08       \n 3 20613590910 CONSORCIO VIAL MANZANO     2980000            1 2024-12-29       \n 4 20613247760 CONSORCIO MANTENIMIENT…    2850000            1 2024-10-23       \n 5 20100027021 UNIMAQ S.A.                2092986.           1 2024-12-18       \n 6 15609751042 DE BELLEFROID D¿OUDOUM…    1691456            1 2024-10-23       \n 7 20607166251 HOLDING IMPERIAL SOCIE…    1025000            1 2023-10-12       \n 8 20611620099 CONSORCIO VIAL NUEVAS …     766800            1 2023-10-12       \n 9 20573014066 MEGA INVERSIONES SE¿OR…     682418.           2 2023-08-09       \n10 20601992851 OMICRON CONSULTORES Y …     631000            2 2024-12-23       \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 8. GENERACIÓN DE SCORE INTEGRAL DE RIESGO\n# ========================================\n\n\nscore_integral <- concentracion_proveedores %>%\n  left_join(\n    casos_fraccionamiento %>% select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    proveedores_nuevos %>% select(RUC, Es_Nuevo_2023 = Primera_Aparicion),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Es_Nuevo_2023 = !is.na(Es_Nuevo_2023),\n    \n    # Calcular score de riesgo integral\n    Score_Concentracion = ifelse(Participacion_Mercado > 5, 3,\n                                 ifelse(Participacion_Mercado > 2, 2,\n                                       ifelse(Participacion_Mercado > 1, 1, 0))),\n    Score_Fraccionamiento = ifelse(Casos_Fraccionamiento > 5, 3,\n                                   ifelse(Casos_Fraccionamiento > 2, 2,\n                                         ifelse(Casos_Fraccionamiento > 0, 1, 0))),\n    Score_Nuevo = Es_Nuevo_2023 * 2,\n    Score_Una_Orden = (Num_Ordenes == 1 & Monto_Total > quantile(Monto_Total, 0.75)) * 3,\n    \n    SCORE_RIESGO_TOTAL = Score_Concentracion + Score_Fraccionamiento + \n                         Score_Nuevo + Score_Una_Orden\n  ) %>%\n  filter(SCORE_RIESGO_TOTAL >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Participacion_Mercado,\n         Casos_Fraccionamiento, Es_Nuevo_2023, SCORE_RIESGO_TOTAL) %>%\n  arrange(desc(SCORE_RIESGO_TOTAL), desc(Monto_Total))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in left_join(., proveedores_nuevos %>% select(RUC, Es_Nuevo_2023 = Primera_Aparicion), : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 228 of `x` matches multiple rows in `y`.\nℹ Row 168 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(score_integral, 20))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 8\n           RUC Razon_Social        Monto_Total Num_Ordenes Participacion_Mercado\n         <dbl> <chr>                     <dbl>       <int>                 <dbl>\n 1 20285093245 ITALTRAC SELVA SAC     6100000            1                 6.42 \n 2 20613590910 CONSORCIO VIAL MAN…    2980000            1                 3.14 \n 3 20613247760 CONSORCIO MANTENIM…    2850000            1                 3.00 \n 4 20100027021 UNIMAQ S.A.            2092986.           1                 2.20 \n 5 20601724597 LEAN WORK SOCIEDAD…    5030000            5                 5.29 \n 6 15609751042 DE BELLEFROID D¿OU…    1691456            1                 1.78 \n 7 20607166251 HOLDING IMPERIAL S…    1025000            1                 1.08 \n 8 20611620099 CONSORCIO VIAL NUE…     766800            1                 0.807\n 9 20611696851 CONSORCIO TINGO         583700            1                 0.614\n10 20600924282 ZC IDEAL GROUP S.A.     530220            1                 0.558\n11 20611676639 CONSORCIO BARUKH        515577.           1                 0.543\n12 20613539728 CONSORCIO MANZANO       479900            1                 0.505\n13 20612914266 CONSTRUCTORA & CON…     455800            1                 0.480\n14 20613223879 CONSORCIO INGENIER…     427500            1                 0.450\n15 20608078429 CONSULTOR¿A Y PROY…     385200.           1                 0.405\n16 10448406011 ZAVALA FABIAN LEON…     369776.           1                 0.389\n17 10762017453 ARRIETA RODRIGUEZ …     357000            1                 0.376\n18 20542479231 CONTRATISTASGENERA…     350000            1                 0.368\n19 20608515551 EMPRESA INGENIERIA…     332000            1                 0.349\n20 20611023511 CONSORCIO MARA¿ON       307486            1                 0.324\n# ℹ 3 more variables: Casos_Fraccionamiento <int>, Es_Nuevo_2023 <lgl>,\n#   SCORE_RIESGO_TOTAL <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 9. VISUALIZACIONES CLAVE\n# ========================================\n\n# A. Timeline de anomalías\ntimeline_anomalias <- ggplot(analisis_temporal, aes(x = Año_Mes, y = Monto_Mensual/1000000)) +\n  geom_line(color = \"#34495e\", linewidth = 1) +\n  geom_point(data = meses_anomalos, \n            aes(x = Año_Mes, y = Monto_Mensual/1000000),\n            color = \"red\", size = 4) +\n  geom_hline(yintercept = limite_superior/1000000, \n            linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = as.Date(\"2023-01-01\"), \n            linetype = \"dashed\", color = \"blue\", alpha = 0.5) +\n  annotate(\"text\", x = as.Date(\"2023-01-01\"), y = max(analisis_temporal$Monto_Mensual/1000000),\n          label = \"Cambio de Gestión\", angle = 90, vjust = -0.5, color = \"blue\") +\n  labs(title = \"Timeline de Gastos con Detección de Anomalías\",\n       subtitle = \"Línea roja = Límite de 3 sigmas | Puntos rojos = Meses anómalos\",\n       x = \"Mes\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\ntimeline_anomalias\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# B. Mapa de calor de riesgo por mes y tipo\nmapa_calor <- datos_con_periodo %>%\n  group_by(Año, Mes, Contratacion_Corto) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio)/1000000,\n    .groups = 'drop'\n  ) %>%\n  ggplot(aes(x = factor(Mes), y = Contratacion_Corto, fill = Monto_Total)) +\n  geom_tile() +\n  facet_wrap(~Año) +\n  scale_fill_gradient2(low = \"white\", mid = \"orange\", high = \"red\",\n                       midpoint = median(datos_con_periodo$Monto_limpio/1000000)) +\n  labs(title = \"Mapa de Calor: Concentración de Gastos\",\n       x = \"Mes\", y = \"Tipo de Contratación\",\n       fill = \"Monto\\n(Millones S/)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nmapa_calor\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clasificación por tipo de proveedor\ndatos <- datos %>%\n  mutate(Tipo_Proveedor = case_when(\n    str_starts(RUC, \"10\") ~ \"Persona Natural\",\n    str_starts(RUC, \"20\") ~ \"Persona Jurídica\",\n    TRUE ~ \"Otro\"\n  ))\n\n# Tabla de frecuencias por tipo de proveedor\ncat(\"\\n\\nTABLA DE FRECUENCIAS POR TIPO DE PROVEEDOR:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nTABLA DE FRECUENCIAS POR TIPO DE PROVEEDOR:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"-------------------------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-------------------------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\ntabla_tipo_proveedor <- datos %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Porcentaje_Ordenes = n() / nrow(datos) * 100,\n    Monto_Total = sum(Monto_limpio),\n    Porcentaje_Monto = sum(Monto_limpio) / sum(datos$Monto_limpio) * 100,\n    Monto_Promedio = mean(Monto_limpio),\n    Num_Proveedores_Unicos = n_distinct(RUC)\n  ) %>%\n  mutate(across(where(is.numeric), ~round(., 2)))\n\nprint(tabla_tipo_proveedor)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 7\n  Tipo_Proveedor   Num_Ordenes Porcentaje_Ordenes Monto_Total Porcentaje_Monto\n  <chr>                  <dbl>              <dbl>       <dbl>            <dbl>\n1 Otro                       9               0.23    3518335               3.7\n2 Persona Jurídica        1285              32.4    65832032.             69.3\n3 Persona Natural         2678              67.4    25658399.             27.0\n# ℹ 2 more variables: Monto_Promedio <dbl>, Num_Proveedores_Unicos <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Distribución temporal\ncat(\"\\n\\nDISTRIBUCIÓN TEMPORAL:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nDISTRIBUCIÓN TEMPORAL:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"----------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n----------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nrango_fechas <- datos %>%\n  summarise(\n    Fecha_Inicio = min(Fecha_Emision),\n    Fecha_Fin = max(Fecha_Emision),\n    Dias_Totales = as.numeric(max(Fecha_Emision) - min(Fecha_Emision)),\n    Años_Completos = n_distinct(year(Fecha_Emision))\n  )\nprint(rango_fechas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  Fecha_Inicio Fecha_Fin  Dias_Totales Años_Completos\n  <date>       <date>            <dbl>          <int>\n1 2022-01-11   2025-08-29         1326              4\n```\n\n\n:::\n\n```{.r .cell-code}\ndatos <- datos %>%\n  mutate(Año = year(Fecha_Emision))\n\n# Análisis por año\ncomparacion_anual <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    Mediana_Monto = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Proveedores_Unicos = n_distinct(RUC),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    Ordenes_Por_Proveedor = n() / n_distinct(RUC),\n    Monto_Max = max(Monto_limpio),\n    Monto_Min = min(Monto_limpio)\n  ) %>%\n  arrange(Año)\n\nprint(comparacion_anual)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 11\n    Año Num_Ordenes Monto_Total Monto_Promedio Mediana_Monto Desv_Estandar\n  <dbl>       <int>       <dbl>          <dbl>         <dbl>         <dbl>\n1  2022         526   15860876.         30154.          4275       105361.\n2  2023        1250   24968376.         19975.          4000        90836.\n3  2024        1298   42787885.         32964.          3500       234244.\n4  2025         898   11391628.         12686.          4000        35417.\n# ℹ 5 more variables: Proveedores_Unicos <int>, Tipos_Contratacion <int>,\n#   Ordenes_Por_Proveedor <dbl>, Monto_Max <dbl>, Monto_Min <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular tasas de crecimiento\ncomparacion_anual <- comparacion_anual %>%\n  mutate(\n    Crecimiento_Monto_Pct = (Monto_Total - lag(Monto_Total)) / lag(Monto_Total) * 100,\n    Crecimiento_Ordenes_Pct = (Num_Ordenes - lag(Num_Ordenes)) / lag(Num_Ordenes) * 100,\n    Crecimiento_Proveedores_Pct = (Proveedores_Unicos - lag(Proveedores_Unicos)) / lag(Proveedores_Unicos) * 100\n  )\n\ncat(\"\\nTASAS DE CRECIMIENTO ANUAL:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTASAS DE CRECIMIENTO ANUAL:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"---------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n---------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(comparacion_anual %>% \n      select(Año, Crecimiento_Monto_Pct, Crecimiento_Ordenes_Pct, Crecimiento_Proveedores_Pct))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n    Año Crecimiento_Monto_Pct Crecimiento_Ordenes_Pct Crecimiento_Proveedores_…¹\n  <dbl>                 <dbl>                   <dbl>                      <dbl>\n1  2022                  NA                     NA                          NA  \n2  2023                  57.4                  138.                         53.4\n3  2024                  71.4                    3.84                      -10.8\n4  2025                 -73.4                  -30.8                       -16.7\n# ℹ abbreviated name: ¹​Crecimiento_Proveedores_Pct\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Análisis mensual para detectar picos\nanalisis_mensual <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Cambio_Mensual = (Monto_Mensual - lag(Monto_Mensual)) / lag(Monto_Mensual) * 100\n  )\n\n# Identificar picos y caídas (>50% cambio)\npicos_caidas <- analisis_mensual %>%\n  filter(abs(Cambio_Mensual) > 50, !is.na(Cambio_Mensual)) %>%\n  mutate(\n    Tipo = ifelse(Cambio_Mensual > 0, \"PICO\", \"CAÍDA\"),\n    Mes_Año = format(Año_Mes, \"%b-%Y\")\n  )\nprint(picos_caidas %>% select(Mes_Año, Tipo, Cambio_Mensual, Monto_Mensual))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 × 4\n   Mes_Año   Tipo  Cambio_Mensual Monto_Mensual\n   <chr>     <chr>          <dbl>         <dbl>\n 1 Feb.-2022 PICO           981.        867542.\n 2 Mar.-2022 PICO            53.8      1334709.\n 3 Abr.-2022 CAÍDA          -85.5       193331.\n 4 May.-2022 PICO           325.        822577.\n 5 Jun.-2022 CAÍDA          -99.1         7100 \n 6 Dic.-2022 PICO        176736.      12555359.\n 7 Ene.-2023 CAÍDA          -99.8        25362.\n 8 Feb.-2023 PICO          2542.        670118.\n 9 May.-2023 PICO           234.       2521894 \n10 Jun.-2023 CAÍDA          -58.2      1053311.\n# ℹ 15 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de evolución anual\ngrafico_evolucion <- ggplot(comparacion_anual, aes(x = factor(Año))) +\n  geom_bar(aes(y = Monto_Total/1000000), stat = \"identity\", fill = \"#3498db\", alpha = 0.7) +\n  geom_line(aes(y = Num_Ordenes/10, group = 1), color = \"#e74c3c\", linewidth = 2) +\n  geom_point(aes(y = Num_Ordenes/10), color = \"#e74c3c\", linewidth = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~.*10, name = \"Número de Órdenes\")\n  ) +\n  labs(\n    title = \"Evolución Anual del Gasto y Órdenes\",\n    subtitle = \"Barras = Monto Total | Línea = Número de Órdenes\",\n    x = \"Año\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.text.x = element_text(size = 11)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_point(aes(y = Num_Ordenes/10), color = \"#e74c3c\", linewidth =\n3): Ignoring unknown parameters: `linewidth`\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(grafico_evolucion)\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npresupuesto_oficial <- data.frame(\n  Año = c(2023, 2024, 2025),\n  PIM = c(1999726251, 1961841636, 1905495522),  # Presupuesto Institucional Modificado\n  Ejecutado_Oficial = c(1839965157, 1866031196, 1232661856),  # Según reporte oficial\n  Porcentaje_Oficial = c(92.0, 95.1, 64.7)\n)\n\n# Calcular gasto real detectado\ngasto_real_detectado <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Gasto_Detectado = sum(Monto_limpio),\n    .groups = 'drop'\n  )\n\nanalisis_presupuesto <- presupuesto_oficial %>%\n  left_join(gasto_real_detectado, by = \"Año\") %>%\n  mutate(\n    Gasto_Detectado = replace_na(Gasto_Detectado, 0),\n    Porcentaje_Detectado = (Gasto_Detectado / PIM) * 100,\n    Diferencia_Oficial_Detectado = Ejecutado_Oficial - Gasto_Detectado,\n    Porcentaje_No_Registrado = (Diferencia_Oficial_Detectado / Ejecutado_Oficial) * 100\n  )\n\nprint(analisis_presupuesto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Año        PIM Ejecutado_Oficial Porcentaje_Oficial Gasto_Detectado\n1 2023 1999726251        1839965157               92.0        24968376\n2 2024 1961841636        1866031196               95.1        42787885\n3 2025 1905495522        1232661856               64.7        11391629\n  Porcentaje_Detectado Diferencia_Oficial_Detectado Porcentaje_No_Registrado\n1            1.2485897                   1814996781                 98.64300\n2            2.1810061                   1823243311                 97.70701\n3            0.5978302                   1221270228                 99.07585\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_graf_presupuesto <- analisis_presupuesto %>%\n  select(Año, PIM, Ejecutado_Oficial, Gasto_Detectado) %>%\n  pivot_longer(cols = c(PIM, Ejecutado_Oficial, Gasto_Detectado), \n               names_to = \"Tipo\", values_to = \"Monto\") %>%\n  mutate(Tipo = factor(Tipo, levels = c(\"PIM\", \"Ejecutado_Oficial\", \"Gasto_Detectado\")))\n\ngrafico_presupuesto <- ggplot(datos_graf_presupuesto, \n                              aes(x = factor(Año), y = Monto/1000000, fill = Tipo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha = 0.8) +\n  scale_fill_manual(values = c(\"PIM\" = \"#95a5a6\", \n                               \"Ejecutado_Oficial\" = \"#3498db\", \n                               \"Gasto_Detectado\" = \"#e74c3c\"),\n                    labels = c(\"Presupuesto Modificado\", \"Ejecutado (Oficial)\", \"Detectado (Datos)\")) +\n  labs(\n    title = \"Comparación: Presupuesto vs. Ejecución vs. Detectado\",\n    subtitle = \"Diferencias significativas sugieren gastos no registrados o mal clasificados\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo\"\n  ) +\n  theme_minimal() +\n  geom_text(aes(label = round(Monto/1000000, 0)), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5, size = 3)\n\nprint(grafico_presupuesto)\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 4. ANÁLISIS DE FRACCIONAMIENTO POR TIPO\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"4. FRACCIONAMIENTO POR TIPO DE PROVEEDOR\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n4. FRACCIONAMIENTO POR TIPO DE PROVEEDOR\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"=====================================\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\n# Detectar fraccionamiento por tipo de proveedor\nfraccionamiento_por_tipo <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE) %>%\n  left_join(datos %>% select(RUC, Tipo_Proveedor) %>% distinct(), by = \"RUC\") %>% \n  mutate(Tipo_Proveedor = coalesce(Tipo_Proveedor.x, Tipo_Proveedor.y)) %>%\nselect(-Tipo_Proveedor.x, -Tipo_Proveedor.y)\n\nresumen_fraccionamiento <- fraccionamiento_por_tipo %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Casos_Fraccionamiento = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    Monto_Promedio_Fraccion = mean(Monto_limpio),\n    Mediana_Fraccion = median(Monto_limpio),\n    Proveedores_Involucrados = n_distinct(RUC),\n    Dias_Promedio_Entre_Ordenes = mean(Dias_Entre_Ordenes, na.rm = TRUE),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Casos_Por_Proveedor = Casos_Fraccionamiento / Proveedores_Involucrados\n  )\n\nprint(resumen_fraccionamiento)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  Tipo_Proveedor   Casos_Fraccionamiento Monto_Total_Fraccionado\n  <chr>                            <int>                   <dbl>\n1 Persona Jurídica                    75                3970893.\n2 Persona Natural                     49                 818025.\n# ℹ 5 more variables: Monto_Promedio_Fraccion <dbl>, Mediana_Fraccion <dbl>,\n#   Proveedores_Involucrados <int>, Dias_Promedio_Entre_Ordenes <dbl>,\n#   Casos_Por_Proveedor <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Patrones de fraccionamiento\ncat(\"\\n\\nPATRONES DE FRACCIONAMIENTO:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nPATRONES DE FRACCIONAMIENTO:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"-----------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-----------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\n# Para personas naturales\nfraccion_naturales <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Naturales con Fraccionamiento:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTop 10 Personas Naturales con Fraccionamiento:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(fraccion_naturales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n           RUC Razon_Social                      Casos Monto_Total Dias_Promedio\n         <dbl> <chr>                             <int>       <dbl>         <dbl>\n 1 10755546866 ESPIRITU MAIZ ZORAIDA ESMERALDA       5       8786.          2.8 \n 2 10761476080 MALPARTIDA RIVERA KENNY DILAN         5      15210           0.6 \n 3 10761616451 TRUJILLO RAMOS RENZO ELVIS            4       4477.          1.5 \n 4 10417115141 CHAVEZ RIVERA SADITH BERTA            3     112300           0   \n 5 10473243895 ESCOBAL ARANCIAL JOHAN                3     207770           2.33\n 6 10040764459 MENDIETA ESCANDON ELIANA ZUNILDA      2      10177.          0.5 \n 7 10224764699 SANCHEZ CANGAHUALA SANDRA DOMENI…     2       1809.          0   \n 8 10470154999 COTRINA CABELLO DENIS FLORA           2      80970           3   \n 9 10473722394 PONCE GARCIA ILAN SAMIR               2       7360           3   \n10 10734681755 SINCHE MENDIETA KIARA MACIEL          2      79628           0   \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Para personas jurídicas\nfraccion_juridicas <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Jurídicas con Fraccionamiento:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTop 10 Personas Jurídicas con Fraccionamiento:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(fraccion_juridicas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n           RUC Razon_Social                      Casos Monto_Total Dias_Promedio\n         <dbl> <chr>                             <int>       <dbl>         <dbl>\n 1 20573209231 MAZZINI CORREDORES DE SEGUROS S.…     7       9837.         1.57 \n 2 20601368651 GRUPO JULIETT EMPRESA INDIVIDUAL…     6       4209.         1.5  \n 3 20603702001 INVERSIONES DAJAZ SOCIEDAD ANONI…     5       4946.         1.6  \n 4 20103913340 ORVISA SOCIEDAD ANONIMA               4      16559.         1.25 \n 5 20454073143 LA POSITIVA VIDA SEGUROS Y REASE…     4       4153.         2    \n 6 20601946590 INVERSIONES IMPERIO SELVA E.I.R.L     4       4929.         3    \n 7 20126850680 SEDA HUANUCO S.A.                     3       3034.         3    \n 8 20285378754 DISTRIB DE COMP ELECT Y SERV DE …     3      43710.         5.33 \n 9 20528925970 CENTRO MEDICO ESPECIALIZADO SANT…     3      12948          0.667\n10 20573162332 CONSTRUCTORA Y CHANCADORA MAPRES…     3     101400          1    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(datos, aes(x = Contratacion_Corto, y = Monto_limpio/1000, fill = Contratacion_Corto)) +\n  geom_boxplot(alpha = 0.7, outlier.color = \"red\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = \"Distribución de Montos por Tipo de Contratación\",\n       x = \"Tipo de Contratación\", y = \"Monto (en miles de S/.)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"\\n\\n=====================================\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"5. ANÁLISIS DE RELACIONES ENTRE VARIABLES\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n5. ANÁLISIS DE RELACIONES ENTRE VARIABLES\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"=====================================\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\n# Análisis por tipo de contratación\nrelacion_tipo_contratacion <- datos %>%\n  group_by(Tipo_Contratacion, Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    CV = sd(Monto_limpio) / mean(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\ncat(\"RELACIÓN TIPO CONTRATACIÓN - TIPO PROVEEDOR:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRELACIÓN TIPO CONTRATACIÓN - TIPO PROVEEDOR:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"--------------------------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n--------------------------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(head(relacion_tipo_contratacion, 15))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 6\n   Tipo_Contratacion       Tipo_Proveedor Num_Ordenes Monto_Total Monto_Promedio\n   <chr>                   <chr>                <int>       <dbl>          <dbl>\n 1 Deviene de Procesos de… Persona Juríd…         175   56494143.        322824.\n 2 Contrataciones hasta 8… Persona Natur…        2159   16167452.          7488.\n 3 Contrataciones hasta 8… Persona Juríd…         834    7058793.          8464.\n 4 Deviene de Procesos de… Persona Natur…          42    6284841.        149639.\n 5 Contrataciones hasta 8… Persona Natur…         309    2152616.          6966.\n 6 Deviene de Procesos de… Otro                     6    1780890         296815 \n 7 Deviene de Exoneracion… Otro                     1    1691456        1691456 \n 8 Contrataciones hasta 8… Persona Juríd…         168    1176656.          7004.\n 9 Contrataciones hasta 9… Persona Natur…         152     940105.          6185.\n10 Contrataciones hasta 9… Persona Juríd…          50     677422.         13548.\n11 Deviene de Exoneracion… Persona Juríd…           4     224691.         56173.\n12 Derivado de contrataci… Persona Juríd…          49     147669.          3014.\n13 Derivado de contrataci… Persona Natur…          11      71276.          6480.\n14 Otras contrataciones s… Persona Juríd…           5      52658.         10532.\n15 Contrataciones hasta 8… Otro                     2      45989          22994.\n# ℹ 1 more variable: CV <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_correlacion <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Año = year(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Es_Fin_Año = ifelse(Mes >= 11, 1, 0),\n    Es_Natural = ifelse(Tipo_Proveedor == \"Persona Natural\", 1, 0)\n  )\n\n# Calcular correlaciones\ncorrelaciones <- datos_correlacion %>%\n  select(Monto_limpio, Mes, Trimestre, Es_Fin_Año, Es_Natural) %>%\n  cor(use = \"complete.obs\")\nprint(round(correlaciones, 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Monto_limpio    Mes Trimestre Es_Fin_Año Es_Natural\nMonto_limpio        1.000  0.107     0.104      0.090     -0.138\nMes                 0.107  1.000     0.971      0.721     -0.071\nTrimestre           0.104  0.971     1.000      0.659     -0.069\nEs_Fin_Año          0.090  0.721     0.659      1.000     -0.043\nEs_Natural         -0.138 -0.071    -0.069     -0.043      1.000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npatrones_sospechosos <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Tipos_Contratacion_Diferentes = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  filter(Tipos_Contratacion_Diferentes >= 3, Monto_Total > 100000) %>%\n  arrange(desc(Monto_Total))\nprint(head(patrones_sospechosos, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n          RUC Num_Ordenes Monto_Total Tipos_Contratacion_Diferentes\n        <dbl>       <int>       <dbl>                         <int>\n1 10470154999          28     601763.                             3\n2 10734681755          15     299374.                             3\n3 10741592512           6     271984                              3\n4 10427770881           4     235634.                             3\n5 10469275561           6     137859.                             3\n6 10401597889          16     132250                              3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"\\n\\n=====================================\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"6. DISTRIBUCIÓN DEL GASTO POR TIPO DE CONTRATACIÓN\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n6. DISTRIBUCIÓN DEL GASTO POR TIPO DE CONTRATACIÓN\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"=====================================\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\n# Distribución por año y tipo\ndistribucion_tipo_año <- datos %>%\n  group_by(Año, Tipo_Contratacion) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  group_by(Año) %>%\n  mutate(\n    Porcentaje_Monto = Monto_Total / sum(Monto_Total) * 100,\n    Porcentaje_Ordenes = Num_Ordenes / sum(Num_Ordenes) * 100\n  )\n\n# Tabla resumen\ntabla_distribucion <- distribucion_tipo_año %>%\n  select(Año, Tipo_Contratacion, Monto_Total, Porcentaje_Monto) %>%\n  arrange(Año, desc(Monto_Total)) %>%\n  group_by(Año) %>%\n  slice_head(n = 5)  # Top 5 por año\n\nprint(tabla_distribucion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 4\n# Groups:   Año [4]\n     Año Tipo_Contratacion                          Monto_Total Porcentaje_Monto\n   <dbl> <chr>                                            <dbl>            <dbl>\n 1  2022 Deviene de Procesos de Selección             12241457.           77.2  \n 2  2022 Contrataciones hasta 8 UIT (LEY 30225)(No…    1850128.           11.7  \n 3  2022 Contrataciones hasta 9 UIT (D.U. 016 - 20…    1617527.           10.2  \n 4  2022 Otras contrataciones sin proceso de selec…      94766.            0.597\n 5  2022 Derivado de contratación por catálogo ele…      56999.            0.359\n 6  2023 Deviene de Procesos de Selección             16491826.           66.1  \n 7  2023 Contrataciones hasta 8 UIT (LEY 30225)(No…    8221153.           32.9  \n 8  2023 Derivado de contratación por catálogo ele…     161947.            0.649\n 9  2023 Deviene de Exoneraciones / Contratación D…      93450             0.374\n10  2024 Deviene de Procesos de Selección             31433784.           73.5  \n11  2024 Contrataciones hasta 8 UIT (LEY 30225)(No…    9531404.           22.3  \n12  2024 Deviene de Exoneraciones / Contratación D…    1822697.            4.26 \n13  2025 Deviene de Procesos de Selección              4392807.           38.6  \n14  2025 Contrataciones hasta 8 UIT (LEY 30225)(No…    3669550.           32.2  \n15  2025 Contrataciones hasta 8 UIT (No incluye la…    3329272.           29.2  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraf_absolutos <- ggplot(distribucion_tipo_año, \n                         aes(x = factor(Año), y = Monto_Total/1000000, \n                             fill = Tipo_Contratacion)) +  # Eliminar reorder()\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Distribución del Gasto por Tipo de Contratación (Montos Absolutos)\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo de Contratación\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set3\")\n\nprint(graf_absolutos)\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncambios_distribucion <- distribucion_tipo_año %>%\n  group_by(Tipo_Contratacion) %>%\n  arrange(Año) %>%\n  mutate(\n    Cambio_Porcentaje = Porcentaje_Monto - lag(Porcentaje_Monto)\n  ) %>%\n  filter(abs(Cambio_Porcentaje) > 5, !is.na(Cambio_Porcentaje))\n\ncat(\"\\n\\nCAMBIOS SIGNIFICATIVOS EN DISTRIBUCIÓN (>5 puntos porcentuales):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nCAMBIOS SIGNIFICATIVOS EN DISTRIBUCIÓN (>5 puntos porcentuales):\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"----------------------------------------------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n----------------------------------------------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(cambios_distribucion %>% \n      select(Tipo_Contratacion, Año, Porcentaje_Monto, Cambio_Porcentaje))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n# Groups:   Tipo_Contratacion [2]\n  Tipo_Contratacion                       Año Porcentaje_Monto Cambio_Porcentaje\n  <chr>                                 <dbl>            <dbl>             <dbl>\n1 Contrataciones hasta 8 UIT (LEY 3022…  2023             32.9             21.3 \n2 Deviene de Procesos de Selección       2023             66.1            -11.1 \n3 Contrataciones hasta 8 UIT (LEY 3022…  2024             22.3            -10.7 \n4 Deviene de Procesos de Selección       2024             73.5              7.41\n5 Contrataciones hasta 8 UIT (LEY 3022…  2025             32.2              9.94\n6 Deviene de Procesos de Selección       2025             38.6            -34.9 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ========================================\n# 7. RANKING DE PROVEEDORES RELEVANTES\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"7. RANKING DE PROVEEDORES RELEVANTES\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n7. RANKING DE PROVEEDORES RELEVANTES\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"=====================================\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=====================================\n```\n\n\n:::\n\n```{.r .cell-code}\n# Top 20 Personas Jurídicas\ntop_juridicas <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"TOP 20 PERSONAS JURÍDICAS:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTOP 20 PERSONAS JURÍDICAS:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"--------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n--------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_juridicas %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 6\n          RUC Razon_Social Monto_Total Num_Ordenes Alertas_Totales Es_Nuevo_2023\n        <dbl> <chr>              <dbl>       <int>           <int> <lgl>        \n 1    2.03e10 ITALTRAC SE…     6100000           1               1 TRUE         \n 2    2.06e10 CONCRETERA …     5108120          14               4 FALSE        \n 3    2.06e10 LEAN WORK S…     5030000           5               6 TRUE         \n 4    2.06e10 CONSORCIO V…     2980000           1               1 TRUE         \n 5    2.06e10 CONSORCIO M…     2850000           1               1 TRUE         \n 6    2.06e10 INVERSIONES…     2820818           5               2 FALSE        \n 7    2.06e10 CONCRETERA …     2270568           6               1 FALSE        \n 8    2.06e10 CONSTRUCTOR…     2101222          14              14 FALSE        \n 9    2.01e10 UNIMAQ S.A.      2092986           1               1 TRUE         \n10    2.01e10 ORVISA SOCI…     2057806          41               7 FALSE        \n11    2.05e10 WG DISTRIBU…     1764714          17               9 FALSE        \n12    2.06e10 CONSTRUCTOR…     1435449          21              19 FALSE        \n13    2.04e10 SERVICENTRO…     1094945          52              19 FALSE        \n14    2.04e10 PARABOLA S.…     1035264           4               1 FALSE        \n15    2.06e10 HOLDING IMP…     1025000           1               1 TRUE         \n16    2.06e10 GRUPO EMPRE…      899464          14               3 FALSE        \n17    2.06e10 CONSTRUCTOR…      829692           1               1 FALSE        \n18    2.06e10 CONSORCIO V…      766800           1               1 TRUE         \n19    2.06e10 SAN FRANCIS…      757513           5               3 FALSE        \n20    2.06e10 MEGA INVERS…      682418           2               0 TRUE         \n```\n\n\n:::\n\n```{.r .cell-code}\n# Top 20 Personas Naturales\ntop_naturales <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"\\n\\nTOP 20 PERSONAS NATURALES:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nTOP 20 PERSONAS NATURALES:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"--------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n--------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_naturales %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 6\n          RUC Razon_Social Monto_Total Num_Ordenes Alertas_Totales Es_Nuevo_2023\n        <dbl> <chr>              <dbl>       <int>           <int> <lgl>        \n 1    1.04e10 DOROTEO PER…      920848           3               0 FALSE        \n 2    1.04e10 TIMOTEO ALV…      611000           2               0 TRUE         \n 3    1.05e10 COTRINA CAB…      601763          28              13 TRUE         \n 4    1.05e10 PAREDES SAL…      538324           2               0 TRUE         \n 5    1.04e10 ANTAURCO AL…      487219           2               0 TRUE         \n 6    1.04e10 COTRINA AVI…      433046           5               0 FALSE        \n 7    1.04e10 ZAVALA FABI…      369776           1               0 TRUE         \n 8    1.08e10 ARRIETA ROD…      357000           1               0 TRUE         \n 9    1.02e10 CASTILLEJOS…      356704          13              10 TRUE         \n10    1.06e10 ALCEDO TIMO…      331711           3               0 TRUE         \n11    1.02e10 DAGA SAAVED…      302400          15               7 FALSE        \n12    1.07e10 SINCHE MEND…      299374          15               7 FALSE        \n13    1.05e10 ESCOBAL ARA…      298570           5               4 TRUE         \n14    1.04e10 COZ MEGO LI…      279200           9               8 FALSE        \n15    1.07e10 MEDINA COEL…      271984           6               4 FALSE        \n16    1.04e10 CHAVEZ RIVE…      244250           7              10 TRUE         \n17    1.04e10 CELIS CORRE…      239564           1               0 TRUE         \n18    1.08e10 VALDIVIA FL…      238493           1               0 TRUE         \n19    1.04e10 MEDINA ALBO…      235634           4               2 FALSE        \n20    1.04e10 RAFAELO REY…      219886           2               0 TRUE         \n```\n\n\n:::\n\n```{.r .cell-code}\n# Proveedores con múltiples alertas\nmulti_alertas <- rbind(\n  top_juridicas %>% mutate(Tipo = \"Jurídica\"),\n  top_naturales %>% mutate(Tipo = \"Natural\")\n) %>%\n  filter(Alertas_Totales >= 3) %>%\n  arrange(desc(Alertas_Totales), desc(Monto_Total))\n\ncat(\"\\n\\nPROVEEDORES CON MÚLTIPLES ALERTAS (>=3):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\nPROVEEDORES CON MÚLTIPLES ALERTAS (>=3):\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"----------------------------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n----------------------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(multi_alertas %>% \n      select(Tipo, RUC, Razon_Social, Monto_Total, \n             Casos_Fraccionamiento, Ordenes_Sobreprecio, Alertas_Totales))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 17 × 7\n   Tipo             RUC Razon_Social           Monto_Total Casos_Fraccionamiento\n   <chr>          <dbl> <chr>                        <dbl>                 <int>\n 1 Jurídica 20573162332 CONSTRUCTORA Y CHANCA…    1435449.                     3\n 2 Jurídica 20404553292 SERVICENTRO AVILA E.I…    1094945.                     0\n 3 Jurídica 20573243251 CONSTRUCTORA SAN FRAN…    2101222.                     2\n 4 Natural  10470154999 COTRINA CABELLO DENIS…     601763.                     2\n 5 Natural  10229999171 CASTILLEJOS RIVERA HI…     356704.                     1\n 6 Natural  10417115141 CHAVEZ RIVERA SADITH …     244250                      3\n 7 Jurídica 20489414946 WG DISTRIBUCIONES EMP…    1764714.                     0\n 8 Natural  10426029893 COZ MEGO LIV DEYSI         279200                      0\n 9 Jurídica 20103913340 ORVISA SOCIEDAD ANONI…    2057806.                     4\n10 Natural  10225219562 DAGA SAAVEDRA DIAHANN…     302400                      0\n11 Natural  10734681755 SINCHE MENDIETA KIARA…     299374.                     2\n12 Jurídica 20601724597 LEAN WORK SOCIEDAD AN…    5030000                      1\n13 Jurídica 20573152531 CONCRETERA WUANUKO MI…    5108120.                     2\n14 Natural  10473243895 ESCOBAL ARANCIAL JOHAN     298570                      3\n15 Natural  10741592512 MEDINA COELLO LUIS RO…     271984                      2\n16 Jurídica 20573047665 GRUPO EMPRESARIAL DE …     899464.                     1\n17 Jurídica 20602600841 SAN FRANCISCO VYM E.I…     757513                      1\n# ℹ 2 more variables: Ordenes_Sobreprecio <int>, Alertas_Totales <int>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(treemapify)\n\nconcentracion_corto <- concentracion_proveedores %>% \n  head(20) %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 25,\n                                paste0(substr(Razon_Social, 1, 22), \"...\"),\n                                Razon_Social))\n\nggplot(concentracion_corto,\n       aes(area = Monto_Total, fill = Participacion_Mercado, label = Nombre_Corto)) +\n  geom_treemap() +\n  geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE, \n                    reflow = TRUE) +  # Agregar reflow\n  labs(title = \"Top 20 Proveedores por Monto (Treemap)\",\n       subtitle = \"Área proporcional al monto total\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(score_integral, aes(x = Num_Ordenes, y = Monto_Total/1000000,\n                           size = Participacion_Mercado, color = SCORE_RIESGO_TOTAL)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(3,12)) +\n  scale_color_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Mapa de Riesgo de Proveedores\",\n       x = \"Número de Órdenes\", y = \"Monto Total (Millones S/)\",\n       size = \"% Participación en el mercado\", color = \"Score de Riesgo\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nserie_tiempo_contratacion <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes, Tipo_Contratacion) %>%\n  summarise(Monto_Mensual = sum(Monto_limpio), .groups = \"drop\")\n\nTiempo_contrataciones = ggplot(serie_tiempo_contratacion, aes(x = Año_Mes, y = Monto_Mensual/1000000,\n                                      color = Tipo_Contratacion)) +\n  geom_line(linewidth = 1.2) +\n  labs(title = \"Evolución Mensual del Gasto por Tipo de Contratación\",\n       x = \"Fecha\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\nggsave(\"mi_grafico_largo.png\", plot = Tiempo_contrataciones, width = 10, height = 8, units = \"in\", dpi = 300)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngasto_proveedor_anual <- datos %>%\n  group_by(Año, Tipo_Proveedor) %>%\n  summarise(Monto_Total = sum(Monto_limpio), .groups = \"drop\")\n\nggplot(gasto_proveedor_anual, aes(x = factor(Año), y = Monto_Total/1000000,\n                                  fill = Tipo_Proveedor)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Distribución del Gasto por Tipo de Proveedor\",\n       x = \"Año\", y = \"Monto (Millones S/)\") +\n  scale_fill_manual(values = c(\"Persona Natural\" = \"#f39c12\",\n                               \"Persona Jurídica\" = \"#2980b9\",\n                               \"Otro\" = \"#7f8c8d\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](DRTCH_RENDER_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(paste(\"✓ Total de órdenes analizadas:\", nrow(datos), \"\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✓ Total de órdenes analizadas: 3972 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"✓ Periodo:\", min(datos$Fecha_Emision), \"a\", max(datos$Fecha_Emision), \"\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✓ Periodo: 2022-01-11 a 2025-08-29 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"✓ Monto total:\", format(sum(datos$Monto_limpio), big.mark = \",\"), \"soles\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✓ Monto total: 95,008,767 soles\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"✓ Proveedores únicos:\", n_distinct(datos$RUC), \"\\n\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✓ Proveedores únicos: 1193 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"🔴 ALERTAS CRÍTICAS:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n🔴 ALERTAS CRÍTICAS:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"-------------------\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-------------------\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"• Proveedores con fraccionamiento:\", nrow(casos_fraccionamiento), \"\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n• Proveedores con fraccionamiento: 65 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"• Órdenes con sobreprecio:\", nrow(ordenes_precio_anomalo), \"\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n• Órdenes con sobreprecio: 517 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"• Sobreprecio máximo detectado:\", \n          round(max(ordenes_precio_anomalo$Sobreprecio_Porcentaje), 1), \"%\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n• Sobreprecio máximo detectado: 1545 %\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"• Proveedores nuevos (2023+) con contratos:\", nrow(proveedores_nuevos), \"\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n• Proveedores nuevos (2023+) con contratos: 875 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(paste(\"• Concentración fin de año promedio:\", \n          round(mean(concentracion_fin_año$Porcentaje_Fin_Año), 1), \"%\\n\\n\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n• Concentración fin de año promedio: 51 %\n```\n\n\n:::\n:::\n",
    "supporting": [
      "DRTCH_RENDER_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}