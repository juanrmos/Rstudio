{"title":"DRTC-H","markdown":{"yaml":{"title":"DRTC-H"},"headingText":"Cargar librerías necesarias","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(igraph)\nlibrary(visNetwork)\n\n\n# 1. LIMPIEZA Y PREPARACIÓN DE DATOS\n\n\n# Cargar los datos\ndatos <- read_excel(\"DRTC-H.xlsx\")\n\n\n# Corregir nombres de columnas (quitar acentos y caracteres especiales)\nnames(datos) <- c(\"N\", \"Entidad\", \"Tipo_Orden\", \"Numero_Orden\", \"Tipo_Contratacion\",\n                  \"Fecha_Emision\", \"Fecha_Compromiso\", \"Monto\", \"RUC\", \n                  \"Razon_Social\", \"Estado\", \"Estado_Registro\", \"Observaciones\")\n\n# Convertir fechas a formato Date\ndatos <- datos %>%\n  mutate(\n    Fecha_Emision = as.Date(Fecha_Emision),\n    Fecha_Compromiso = as.Date(Fecha_Compromiso)\n  )\n\n\n# Convertir montos a numérico\ndatos <- datos %>%\n  mutate(\n    Monto_limpio = as.numeric(gsub(\",\", \"\", gsub(\"^S/\\\\. \", \"\", Monto)))\n  )\n\n\n\n# Eliminar filas con montos nulos si las hay\ndatos <- datos %>% filter(!is.na(Monto_limpio))\n\n\ndatos <- datos %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 15, \n                               paste0(substr(Razon_Social, 1, 12), \"...\"), \n                               Razon_Social))\ndatos <- datos %>%\n  mutate(Contratacion_Corto = ifelse(nchar(Tipo_Contratacion) > 20, \n                               paste0(substr(Tipo_Contratacion, 1, 15), \"...\"), \n                               Tipo_Contratacion))\n```\n\n```{r}\n# ========================================\n# 1. RESUMEN Y DESCRIPCIÓN DE DATOS\n# ========================================\n\ncat(\"\\n=====================================\\n\")\ncat(\"1. RESUMEN ESTADÍSTICO GENERAL\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Estadísticas básicas de montos\ncat(\"ESTADÍSTICAS DE MONTOS:\\n\")\ncat(\"------------------------\\n\")\nsummary_montos <- summary(datos$Monto_limpio)\nprint(summary_montos)\n\ncat(\"\\n\\nESTADÍSTICAS ADICIONALES:\\n\")\ncat(\"------------------------\\n\")\nestadisticas_adicionales <- datos %>%\n  summarise(\n    Total_Ordenes = n(),\n    Total_Proveedores = n_distinct(RUC),\n    Total_Monto = sum(Monto_limpio),\n    Promedio_Orden = mean(Monto_limpio),\n    Mediana_Orden = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Coef_Variacion = sd(Monto_limpio) / mean(Monto_limpio) * 100,\n    Monto_Min = min(Monto_limpio),\n    Monto_Max = max(Monto_limpio),\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = IQR(Monto_limpio)\n  )\n\nprint(t(estadisticas_adicionales))\n```\n\n```{r}\n# A. Índice de Herfindahl-Hirschman (IHH) para medir concentración del mercado\nconcentracion_proveedores <- datos %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Participacion_Mercado = (Monto_Total / sum(Monto_Total)) * 100,\n    Participacion_Cuadrado = Participacion_Mercado^2\n  ) %>%\n  arrange(desc(Monto_Total))\n\n# Calcular IHH (>2500 = altamente concentrado, señal de alerta)\nIHH <- sum(concentracion_proveedores$Participacion_Cuadrado)\nprint(paste(\"Índice Herfindahl-Hirschman:\", round(IHH, 2)))\n```\n\n```{r}\n# B. Análisis de Pareto - 80/20\nconcentracion_proveedores <- concentracion_proveedores %>%\n  mutate(\n    Acumulado_Monto = cumsum(Monto_Total),\n    Porcentaje_Acumulado = (Acumulado_Monto / sum(Monto_Total)) * 100,\n    Ranking = row_number()\n  )\n\n# ¿Cuántos proveedores concentran el 80% del gasto?\nproveedores_80 <- concentracion_proveedores %>%\n  filter(Porcentaje_Acumulado <= 80) %>%\n  nrow()\n\nprint(paste(\"Proveedores que concentran 80% del gasto:\", proveedores_80))\n\n```\n\n```{r}\n# Gráfico de concentración\ngrafico_pareto <- ggplot(concentracion_proveedores %>% head(20)) +\n  geom_col(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n               y = Monto_Total/1000000), \n           fill = \"#e74c3c\", alpha = 0.8) +\n  geom_line(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100,\n                group = 1), \n            color = \"#2c3e50\", linewidth = 1.2) +\n  geom_point(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                 y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100),\n             color = \"#2c3e50\", size = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~./max(concentracion_proveedores$Monto_Total/1000000)*100, \n                        name = \"% Acumulado\")\n  ) +\n  labs(title = \"Análisis de Pareto - Concentración de Proveedores\",\n       subtitle = paste(\"IHH =\", round(IHH, 0), \"- Mercado\", \n                       ifelse(IHH > 2500, \"ALTAMENTE CONCENTRADO\", \"moderado\")),\n       x = \"Proveedor\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngrafico_pareto\n```\n\n```{r}\nproveedores_sospechosos <- concentracion_proveedores %>%\n  mutate(\n    # Bandera 1: Proveedor nuevo con contratos grandes\n    Nueva_Empresa = as.numeric(Primera_Orden - as.Date(\"2023-01-01\")) < 365,\n    Contrato_Grande = Monto_Total > quantile(Monto_Total, 0.75),\n    \n    # Bandera 2: Solo una orden pero monto alto\n    Una_Sola_Orden = Num_Ordenes == 1,\n    Monto_Sospechoso = Monto_Total > quantile(Monto_Total, 0.90),\n    \n    # Bandera 3: Actividad concentrada en periodo corto\n    Dias_Activo = as.numeric(Ultima_Orden - Primera_Orden),\n    Actividad_Corta = Dias_Activo < 30 & Num_Ordenes > 1,\n    \n    # Score de riesgo\n    Score_Riesgo = Nueva_Empresa * 2 + Contrato_Grande + Una_Sola_Orden * 2 + \n                   Monto_Sospechoso * 3 + Actividad_Corta * 2\n  ) %>%\n  filter(Score_Riesgo >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Primera_Orden, \n         Dias_Activo, Score_Riesgo) %>%\n  arrange(desc(Score_Riesgo))\n\nprint(\"PROVEEDORES DE ALTO RIESGO (Posibles empresas fantasma):\")\nprint(head(proveedores_sospechosos, 10))\n```\n\n```{r}\n# Detectar órdenes fraccionadas (mismo proveedor, fechas cercanas, montos similares)\nfraccionamiento <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Monto_Anterior = lag(Monto_limpio),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    \n    # Detectar si es posible fraccionamiento\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE)\n\ncasos_fraccionamiento <- fraccionamiento %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos_Detectados = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos_Detectados))\n\nprint(\"POSIBLES CASOS DE FRACCIONAMIENTO:\")\nprint(head(casos_fraccionamiento, 10))\n```\n\n```{r}\n# ========================================\n# 4. ANÁLISIS TEMPORAL DE ANOMALÍAS\n# ========================================\n\n# A. Detectar picos inusuales de gasto\nanalisis_temporal <- datos %>%\n  mutate(\n    Año_Mes = floor_date(Fecha_Emision, \"month\")\n  ) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Monto_Promedio_Orden = mean(Monto_limpio),\n    .groups = 'drop'\n  )\n\n# Calcular límites de control estadístico (3 sigmas)\nmedia_mensual <- mean(analisis_temporal$Monto_Mensual)\nsd_mensual <- sd(analisis_temporal$Monto_Mensual)\nlimite_superior <- media_mensual + 3 * sd_mensual\n\nmeses_anomalos <- analisis_temporal %>%\n  filter(Monto_Mensual > limite_superior) %>%\n  mutate(\n    Desviacion_Estandar = (Monto_Mensual - media_mensual) / sd_mensual\n  )\n\nprint(\"MESES CON GASTOS ANÓMALOS (>3 sigmas):\")\nprint(meses_anomalos)\n\n```\n\n```{r}\n# B. Análisis de estacionalidad sospechosa\ndatos_con_periodo <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Año = year(Fecha_Emision)\n  )\n\n# Detectar si hay concentración en fin de año (típico en malversación)\ngasto_fin_año <- datos_con_periodo %>%\n  filter(Mes %in% c(11,12)) %>%\n  group_by(Año) %>%\n  summarise(Monto_Fin_Año = sum(Monto_limpio))\n\ngasto_total_anual <- datos_con_periodo %>%\n  group_by(Año) %>%\n  summarise(Monto_Total_Año = sum(Monto_limpio))\n\nconcentracion_fin_año <- gasto_fin_año %>%\n  left_join(gasto_total_anual, by = \"Año\") %>%\n  mutate(\n    Porcentaje_Fin_Año = (Monto_Fin_Año / Monto_Total_Año) * 100\n  )\n\nprint(\"CONCENTRACIÓN DE GASTO EN FIN DE AÑO:\")\nprint(concentracion_fin_año)\n```\n\n```{r}\n# ========================================\n# 5. ANÁLISIS DE REDES Y COLUSIÓN\n# ========================================\n\n# Crear matriz de co-ocurrencia temporal\nventana_dias <- 30  # Ventana de tiempo para detectar co-ocurrencias\n\ncoocurrencias <- datos %>%\n  select(RUC, Fecha_Emision, Monto_limpio) %>%\n  cross_join(datos %>% select(RUC2 = RUC, Fecha2 = Fecha_Emision)) %>%\n  filter(\n    RUC != RUC2,\n    abs(as.numeric(Fecha_Emision - Fecha2)) <= ventana_dias\n  ) %>%\n  group_by(RUC, RUC2) %>%\n  summarise(\n    Veces_Juntos = n(),\n    .groups = 'drop'\n  ) %>%\n  filter(Veces_Juntos >= 3)  # Al menos 3 co-ocurrencias\n\n# Identificar clusters de proveedores\nif(nrow(coocurrencias) > 0) {\n  grafo <- graph_from_data_frame(coocurrencias, directed = FALSE)\n  comunidades <- cluster_louvain(grafo)\n  \n  clusters_sospechosos <- data.frame(\n    RUC = names(membership(comunidades)),\n    Cluster = membership(comunidades)\n  ) %>%\n    group_by(Cluster) %>%\n    summarise(\n      Miembros = n(),\n      RUCs = paste(RUC, collapse = \", \")\n    ) %>%\n    filter(Miembros >= 3)\n  \n  print(\"POSIBLES CARTELES (3+ proveedores relacionados):\")\n  print(clusters_sospechosos)\n}\n```\n\n```{r}\n# ========================================\n# 6. ANÁLISIS DE PRECIOS ANÓMALOS\n# ========================================\n\n# Agrupar por tipo de contratación para comparar precios\nanalisis_precios <- datos %>%\n  group_by(Tipo_Contratacion) %>%\n  mutate(\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = Q3 - Q1,\n    Limite_Superior = Q3 + 1.5 * IQR,\n    Limite_Inferior = Q1 - 1.5 * IQR,\n    Es_Outlier = Monto_limpio > Limite_Superior | Monto_limpio < Limite_Inferior\n  )\n\nordenes_precio_anomalo <- analisis_precios %>%\n  filter(Es_Outlier == TRUE) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion, \n         Fecha_Emision, Monto_limpio, Limite_Superior) %>%\n  mutate(\n    Sobreprecio_Porcentaje = ((Monto_limpio - Limite_Superior) / Limite_Superior) * 100\n  ) %>%\n  filter(Sobreprecio_Porcentaje > 0) %>%\n  arrange(desc(Sobreprecio_Porcentaje))\n\nprint(\"ÓRDENES CON SOBREPRECIOS DETECTADOS:\")\nprint(head(ordenes_precio_anomalo, 15))\n\ntop_sobreprecios <- ordenes_precio_anomalo %>%\n  arrange(desc(Sobreprecio_Porcentaje)) %>%\n  head(5) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion,\n         Fecha_Emision, Monto_limpio, Limite_Superior, Sobreprecio_Porcentaje)\n\n# Mostrar en consola\nprint(top_sobreprecios)\n```\n\n```{r}\n# ========================================\n# 7. ANÁLISIS DE CAMBIO DE GESTIÓN\n# ========================================\n\n# Comparar patrones antes y después del cambio de gestión (2023)\nantes_cambio <- datos %>%\n  filter(Fecha_Emision < as.Date(\"2023-01-01\"))\n\ndespues_cambio <- datos %>%\n  filter(Fecha_Emision >= as.Date(\"2022-01-01\"))\n\n# Proveedores nuevos post-cambio\nproveedores_nuevos <- despues_cambio %>%\n  filter(!(RUC %in% antes_cambio$RUC)) %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Aparicion = min(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\nprint(\"PROVEEDORES NUEVOS POST-CAMBIO DE GESTIÓN (Top 10):\")\nprint(head(proveedores_nuevos, 10))\n```\n\n```{r}\n# ========================================\n# 8. GENERACIÓN DE SCORE INTEGRAL DE RIESGO\n# ========================================\n\n\nscore_integral <- concentracion_proveedores %>%\n  left_join(\n    casos_fraccionamiento %>% select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    proveedores_nuevos %>% select(RUC, Es_Nuevo_2023 = Primera_Aparicion),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Es_Nuevo_2023 = !is.na(Es_Nuevo_2023),\n    \n    # Calcular score de riesgo integral\n    Score_Concentracion = ifelse(Participacion_Mercado > 5, 3,\n                                 ifelse(Participacion_Mercado > 2, 2,\n                                       ifelse(Participacion_Mercado > 1, 1, 0))),\n    Score_Fraccionamiento = ifelse(Casos_Fraccionamiento > 5, 3,\n                                   ifelse(Casos_Fraccionamiento > 2, 2,\n                                         ifelse(Casos_Fraccionamiento > 0, 1, 0))),\n    Score_Nuevo = Es_Nuevo_2023 * 2,\n    Score_Una_Orden = (Num_Ordenes == 1 & Monto_Total > quantile(Monto_Total, 0.75)) * 3,\n    \n    SCORE_RIESGO_TOTAL = Score_Concentracion + Score_Fraccionamiento + \n                         Score_Nuevo + Score_Una_Orden\n  ) %>%\n  filter(SCORE_RIESGO_TOTAL >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Participacion_Mercado,\n         Casos_Fraccionamiento, Es_Nuevo_2023, SCORE_RIESGO_TOTAL) %>%\n  arrange(desc(SCORE_RIESGO_TOTAL), desc(Monto_Total))\n\n\nprint(head(score_integral, 20))\n\n```\n\n```{r}\n# ========================================\n# 9. VISUALIZACIONES CLAVE\n# ========================================\n\n# A. Timeline de anomalías\ntimeline_anomalias <- ggplot(analisis_temporal, aes(x = Año_Mes, y = Monto_Mensual/1000000)) +\n  geom_line(color = \"#34495e\", linewidth = 1) +\n  geom_point(data = meses_anomalos, \n            aes(x = Año_Mes, y = Monto_Mensual/1000000),\n            color = \"red\", size = 4) +\n  geom_hline(yintercept = limite_superior/1000000, \n            linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = as.Date(\"2023-01-01\"), \n            linetype = \"dashed\", color = \"blue\", alpha = 0.5) +\n  annotate(\"text\", x = as.Date(\"2023-01-01\"), y = max(analisis_temporal$Monto_Mensual/1000000),\n          label = \"Cambio de Gestión\", angle = 90, vjust = -0.5, color = \"blue\") +\n  labs(title = \"Timeline de Gastos con Detección de Anomalías\",\n       subtitle = \"Línea roja = Límite de 3 sigmas | Puntos rojos = Meses anómalos\",\n       x = \"Mes\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\ntimeline_anomalias\n```\n\n```{r}\n# B. Mapa de calor de riesgo por mes y tipo\nmapa_calor <- datos_con_periodo %>%\n  group_by(Año, Mes, Contratacion_Corto) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio)/1000000,\n    .groups = 'drop'\n  ) %>%\n  ggplot(aes(x = factor(Mes), y = Contratacion_Corto, fill = Monto_Total)) +\n  geom_tile() +\n  facet_wrap(~Año) +\n  scale_fill_gradient2(low = \"white\", mid = \"orange\", high = \"red\",\n                       midpoint = median(datos_con_periodo$Monto_limpio/1000000)) +\n  labs(title = \"Mapa de Calor: Concentración de Gastos\",\n       x = \"Mes\", y = \"Tipo de Contratación\",\n       fill = \"Monto\\n(Millones S/)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nmapa_calor\n```\n\n```{r}\n# Clasificación por tipo de proveedor\ndatos <- datos %>%\n  mutate(Tipo_Proveedor = case_when(\n    str_starts(RUC, \"10\") ~ \"Persona Natural\",\n    str_starts(RUC, \"20\") ~ \"Persona Jurídica\",\n    TRUE ~ \"Otro\"\n  ))\n\n# Tabla de frecuencias por tipo de proveedor\ncat(\"\\n\\nTABLA DE FRECUENCIAS POR TIPO DE PROVEEDOR:\\n\")\ncat(\"-------------------------------------------\\n\")\ntabla_tipo_proveedor <- datos %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Porcentaje_Ordenes = n() / nrow(datos) * 100,\n    Monto_Total = sum(Monto_limpio),\n    Porcentaje_Monto = sum(Monto_limpio) / sum(datos$Monto_limpio) * 100,\n    Monto_Promedio = mean(Monto_limpio),\n    Num_Proveedores_Unicos = n_distinct(RUC)\n  ) %>%\n  mutate(across(where(is.numeric), ~round(., 2)))\n\nprint(tabla_tipo_proveedor)\n```\n\n```{r}\n# Distribución temporal\ncat(\"\\n\\nDISTRIBUCIÓN TEMPORAL:\\n\")\ncat(\"----------------------\\n\")\nrango_fechas <- datos %>%\n  summarise(\n    Fecha_Inicio = min(Fecha_Emision),\n    Fecha_Fin = max(Fecha_Emision),\n    Dias_Totales = as.numeric(max(Fecha_Emision) - min(Fecha_Emision)),\n    Años_Completos = n_distinct(year(Fecha_Emision))\n  )\nprint(rango_fechas)\n\ndatos <- datos %>%\n  mutate(Año = year(Fecha_Emision))\n\n# Análisis por año\ncomparacion_anual <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    Mediana_Monto = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Proveedores_Unicos = n_distinct(RUC),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    Ordenes_Por_Proveedor = n() / n_distinct(RUC),\n    Monto_Max = max(Monto_limpio),\n    Monto_Min = min(Monto_limpio)\n  ) %>%\n  arrange(Año)\n\nprint(comparacion_anual)\n```\n\n```{r}\n# Calcular tasas de crecimiento\ncomparacion_anual <- comparacion_anual %>%\n  mutate(\n    Crecimiento_Monto_Pct = (Monto_Total - lag(Monto_Total)) / lag(Monto_Total) * 100,\n    Crecimiento_Ordenes_Pct = (Num_Ordenes - lag(Num_Ordenes)) / lag(Num_Ordenes) * 100,\n    Crecimiento_Proveedores_Pct = (Proveedores_Unicos - lag(Proveedores_Unicos)) / lag(Proveedores_Unicos) * 100\n  )\n\ncat(\"\\nTASAS DE CRECIMIENTO ANUAL:\\n\")\ncat(\"---------------------------\\n\")\nprint(comparacion_anual %>% \n      select(Año, Crecimiento_Monto_Pct, Crecimiento_Ordenes_Pct, Crecimiento_Proveedores_Pct))\n```\n\n```{r}\n# Análisis mensual para detectar picos\nanalisis_mensual <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Cambio_Mensual = (Monto_Mensual - lag(Monto_Mensual)) / lag(Monto_Mensual) * 100\n  )\n\n# Identificar picos y caídas (>50% cambio)\npicos_caidas <- analisis_mensual %>%\n  filter(abs(Cambio_Mensual) > 50, !is.na(Cambio_Mensual)) %>%\n  mutate(\n    Tipo = ifelse(Cambio_Mensual > 0, \"PICO\", \"CAÍDA\"),\n    Mes_Año = format(Año_Mes, \"%b-%Y\")\n  )\nprint(picos_caidas %>% select(Mes_Año, Tipo, Cambio_Mensual, Monto_Mensual))\n```\n\n```{r}\n# Gráfico de evolución anual\ngrafico_evolucion <- ggplot(comparacion_anual, aes(x = factor(Año))) +\n  geom_bar(aes(y = Monto_Total/1000000), stat = \"identity\", fill = \"#3498db\", alpha = 0.7) +\n  geom_line(aes(y = Num_Ordenes/10, group = 1), color = \"#e74c3c\", linewidth = 2) +\n  geom_point(aes(y = Num_Ordenes/10), color = \"#e74c3c\", linewidth = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~.*10, name = \"Número de Órdenes\")\n  ) +\n  labs(\n    title = \"Evolución Anual del Gasto y Órdenes\",\n    subtitle = \"Barras = Monto Total | Línea = Número de Órdenes\",\n    x = \"Año\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.text.x = element_text(size = 11)\n  )\n\nprint(grafico_evolucion)\n\n```\n\n```{r}\npresupuesto_oficial <- data.frame(\n  Año = c(2023, 2024, 2025),\n  PIM = c(1999726251, 1961841636, 1905495522),  # Presupuesto Institucional Modificado\n  Ejecutado_Oficial = c(1839965157, 1866031196, 1232661856),  # Según reporte oficial\n  Porcentaje_Oficial = c(92.0, 95.1, 64.7)\n)\n\n# Calcular gasto real detectado\ngasto_real_detectado <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Gasto_Detectado = sum(Monto_limpio),\n    .groups = 'drop'\n  )\n\nanalisis_presupuesto <- presupuesto_oficial %>%\n  left_join(gasto_real_detectado, by = \"Año\") %>%\n  mutate(\n    Gasto_Detectado = replace_na(Gasto_Detectado, 0),\n    Porcentaje_Detectado = (Gasto_Detectado / PIM) * 100,\n    Diferencia_Oficial_Detectado = Ejecutado_Oficial - Gasto_Detectado,\n    Porcentaje_No_Registrado = (Diferencia_Oficial_Detectado / Ejecutado_Oficial) * 100\n  )\n\nprint(analisis_presupuesto)\n```\n\n```{r}\ndatos_graf_presupuesto <- analisis_presupuesto %>%\n  select(Año, PIM, Ejecutado_Oficial, Gasto_Detectado) %>%\n  pivot_longer(cols = c(PIM, Ejecutado_Oficial, Gasto_Detectado), \n               names_to = \"Tipo\", values_to = \"Monto\") %>%\n  mutate(Tipo = factor(Tipo, levels = c(\"PIM\", \"Ejecutado_Oficial\", \"Gasto_Detectado\")))\n\ngrafico_presupuesto <- ggplot(datos_graf_presupuesto, \n                              aes(x = factor(Año), y = Monto/1000000, fill = Tipo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha = 0.8) +\n  scale_fill_manual(values = c(\"PIM\" = \"#95a5a6\", \n                               \"Ejecutado_Oficial\" = \"#3498db\", \n                               \"Gasto_Detectado\" = \"#e74c3c\"),\n                    labels = c(\"Presupuesto Modificado\", \"Ejecutado (Oficial)\", \"Detectado (Datos)\")) +\n  labs(\n    title = \"Comparación: Presupuesto vs. Ejecución vs. Detectado\",\n    subtitle = \"Diferencias significativas sugieren gastos no registrados o mal clasificados\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo\"\n  ) +\n  theme_minimal() +\n  geom_text(aes(label = round(Monto/1000000, 0)), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5, size = 3)\n\nprint(grafico_presupuesto)\n```\n\n```{r}\n# ========================================\n# 4. ANÁLISIS DE FRACCIONAMIENTO POR TIPO\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\ncat(\"4. FRACCIONAMIENTO POR TIPO DE PROVEEDOR\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Detectar fraccionamiento por tipo de proveedor\nfraccionamiento_por_tipo <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE) %>%\n  left_join(datos %>% select(RUC, Tipo_Proveedor) %>% distinct(), by = \"RUC\") %>% \n  mutate(Tipo_Proveedor = coalesce(Tipo_Proveedor.x, Tipo_Proveedor.y)) %>%\nselect(-Tipo_Proveedor.x, -Tipo_Proveedor.y)\n\nresumen_fraccionamiento <- fraccionamiento_por_tipo %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Casos_Fraccionamiento = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    Monto_Promedio_Fraccion = mean(Monto_limpio),\n    Mediana_Fraccion = median(Monto_limpio),\n    Proveedores_Involucrados = n_distinct(RUC),\n    Dias_Promedio_Entre_Ordenes = mean(Dias_Entre_Ordenes, na.rm = TRUE),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Casos_Por_Proveedor = Casos_Fraccionamiento / Proveedores_Involucrados\n  )\n\nprint(resumen_fraccionamiento)\n\n```\n\n```{r}\n# Patrones de fraccionamiento\ncat(\"\\n\\nPATRONES DE FRACCIONAMIENTO:\\n\")\ncat(\"-----------------------------\\n\")\n\n# Para personas naturales\nfraccion_naturales <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Naturales con Fraccionamiento:\\n\")\nprint(fraccion_naturales)\n```\n\n```{r}\n# Para personas jurídicas\nfraccion_juridicas <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Jurídicas con Fraccionamiento:\\n\")\nprint(fraccion_juridicas)\n\n```\n\n```{r}\nggplot(datos, aes(x = Contratacion_Corto, y = Monto_limpio/1000, fill = Contratacion_Corto)) +\n  geom_boxplot(alpha = 0.7, outlier.color = \"red\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = \"Distribución de Montos por Tipo de Contratación\",\n       x = \"Tipo de Contratación\", y = \"Monto (en miles de S/.)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"none\")\n\n```\n\n```{r}\ncat(\"\\n\\n=====================================\\n\")\ncat(\"5. ANÁLISIS DE RELACIONES ENTRE VARIABLES\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Análisis por tipo de contratación\nrelacion_tipo_contratacion <- datos %>%\n  group_by(Tipo_Contratacion, Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    CV = sd(Monto_limpio) / mean(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\ncat(\"RELACIÓN TIPO CONTRATACIÓN - TIPO PROVEEDOR:\\n\")\ncat(\"--------------------------------------------\\n\")\nprint(head(relacion_tipo_contratacion, 15))\n```\n\n```{r}\ndatos_correlacion <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Año = year(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Es_Fin_Año = ifelse(Mes >= 11, 1, 0),\n    Es_Natural = ifelse(Tipo_Proveedor == \"Persona Natural\", 1, 0)\n  )\n\n# Calcular correlaciones\ncorrelaciones <- datos_correlacion %>%\n  select(Monto_limpio, Mes, Trimestre, Es_Fin_Año, Es_Natural) %>%\n  cor(use = \"complete.obs\")\nprint(round(correlaciones, 3))\n```\n\n```{r}\npatrones_sospechosos <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Tipos_Contratacion_Diferentes = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  filter(Tipos_Contratacion_Diferentes >= 3, Monto_Total > 100000) %>%\n  arrange(desc(Monto_Total))\nprint(head(patrones_sospechosos, 10))\n```\n\n```{r}\ncat(\"\\n\\n=====================================\\n\")\ncat(\"6. DISTRIBUCIÓN DEL GASTO POR TIPO DE CONTRATACIÓN\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Distribución por año y tipo\ndistribucion_tipo_año <- datos %>%\n  group_by(Año, Tipo_Contratacion) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  group_by(Año) %>%\n  mutate(\n    Porcentaje_Monto = Monto_Total / sum(Monto_Total) * 100,\n    Porcentaje_Ordenes = Num_Ordenes / sum(Num_Ordenes) * 100\n  )\n\n# Tabla resumen\ntabla_distribucion <- distribucion_tipo_año %>%\n  select(Año, Tipo_Contratacion, Monto_Total, Porcentaje_Monto) %>%\n  arrange(Año, desc(Monto_Total)) %>%\n  group_by(Año) %>%\n  slice_head(n = 5)  # Top 5 por año\n\nprint(tabla_distribucion)\n```\n\n```{r}\ngraf_absolutos <- ggplot(distribucion_tipo_año, \n                         aes(x = factor(Año), y = Monto_Total/1000000, \n                             fill = Tipo_Contratacion)) +  # Eliminar reorder()\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Distribución del Gasto por Tipo de Contratación (Montos Absolutos)\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo de Contratación\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set3\")\n\nprint(graf_absolutos)\n```\n\n```{r}\ncambios_distribucion <- distribucion_tipo_año %>%\n  group_by(Tipo_Contratacion) %>%\n  arrange(Año) %>%\n  mutate(\n    Cambio_Porcentaje = Porcentaje_Monto - lag(Porcentaje_Monto)\n  ) %>%\n  filter(abs(Cambio_Porcentaje) > 5, !is.na(Cambio_Porcentaje))\n\ncat(\"\\n\\nCAMBIOS SIGNIFICATIVOS EN DISTRIBUCIÓN (>5 puntos porcentuales):\\n\")\ncat(\"----------------------------------------------------------------\\n\")\nprint(cambios_distribucion %>% \n      select(Tipo_Contratacion, Año, Porcentaje_Monto, Cambio_Porcentaje))\n\n```\n\n```{r}\n# ========================================\n# 7. RANKING DE PROVEEDORES RELEVANTES\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\ncat(\"7. RANKING DE PROVEEDORES RELEVANTES\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Top 20 Personas Jurídicas\ntop_juridicas <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"TOP 20 PERSONAS JURÍDICAS:\\n\")\ncat(\"--------------------------\\n\")\nprint(top_juridicas %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n\n# Top 20 Personas Naturales\ntop_naturales <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"\\n\\nTOP 20 PERSONAS NATURALES:\\n\")\ncat(\"--------------------------\\n\")\nprint(top_naturales %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n\n# Proveedores con múltiples alertas\nmulti_alertas <- rbind(\n  top_juridicas %>% mutate(Tipo = \"Jurídica\"),\n  top_naturales %>% mutate(Tipo = \"Natural\")\n) %>%\n  filter(Alertas_Totales >= 3) %>%\n  arrange(desc(Alertas_Totales), desc(Monto_Total))\n\ncat(\"\\n\\nPROVEEDORES CON MÚLTIPLES ALERTAS (>=3):\\n\")\ncat(\"----------------------------------------\\n\")\nprint(multi_alertas %>% \n      select(Tipo, RUC, Razon_Social, Monto_Total, \n             Casos_Fraccionamiento, Ordenes_Sobreprecio, Alertas_Totales))\n\n```\n\n```{r}\nlibrary(treemapify)\n\nconcentracion_corto <- concentracion_proveedores %>% \n  head(20) %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 25,\n                                paste0(substr(Razon_Social, 1, 22), \"...\"),\n                                Razon_Social))\n\nggplot(concentracion_corto,\n       aes(area = Monto_Total, fill = Participacion_Mercado, label = Nombre_Corto)) +\n  geom_treemap() +\n  geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE, \n                    reflow = TRUE) +  # Agregar reflow\n  labs(title = \"Top 20 Proveedores por Monto (Treemap)\",\n       subtitle = \"Área proporcional al monto total\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  theme_minimal()\n\n```\n\n```{r}\nggplot(score_integral, aes(x = Num_Ordenes, y = Monto_Total/1000000,\n                           size = Participacion_Mercado, color = SCORE_RIESGO_TOTAL)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(3,12)) +\n  scale_color_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Mapa de Riesgo de Proveedores\",\n       x = \"Número de Órdenes\", y = \"Monto Total (Millones S/)\",\n       size = \"% Participación en el mercado\", color = \"Score de Riesgo\") +\n  theme_minimal()\n\n```\n\n```{r}\nserie_tiempo_contratacion <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes, Tipo_Contratacion) %>%\n  summarise(Monto_Mensual = sum(Monto_limpio), .groups = \"drop\")\n\nTiempo_contrataciones = ggplot(serie_tiempo_contratacion, aes(x = Año_Mes, y = Monto_Mensual/1000000,\n                                      color = Tipo_Contratacion)) +\n  geom_line(linewidth = 1.2) +\n  labs(title = \"Evolución Mensual del Gasto por Tipo de Contratación\",\n       x = \"Fecha\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\nggsave(\"mi_grafico_largo.png\", plot = Tiempo_contrataciones, width = 10, height = 8, units = \"in\", dpi = 300)\n```\n\n```{r}\ngasto_proveedor_anual <- datos %>%\n  group_by(Año, Tipo_Proveedor) %>%\n  summarise(Monto_Total = sum(Monto_limpio), .groups = \"drop\")\n\nggplot(gasto_proveedor_anual, aes(x = factor(Año), y = Monto_Total/1000000,\n                                  fill = Tipo_Proveedor)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Distribución del Gasto por Tipo de Proveedor\",\n       x = \"Año\", y = \"Monto (Millones S/)\") +\n  scale_fill_manual(values = c(\"Persona Natural\" = \"#f39c12\",\n                               \"Persona Jurídica\" = \"#2980b9\",\n                               \"Otro\" = \"#7f8c8d\")) +\n  theme_minimal()\n\n```\n\n```{r}\ncat(paste(\"✓ Total de órdenes analizadas:\", nrow(datos), \"\\n\"))\ncat(paste(\"✓ Periodo:\", min(datos$Fecha_Emision), \"a\", max(datos$Fecha_Emision), \"\\n\"))\ncat(paste(\"✓ Monto total:\", format(sum(datos$Monto_limpio), big.mark = \",\"), \"soles\\n\"))\ncat(paste(\"✓ Proveedores únicos:\", n_distinct(datos$RUC), \"\\n\\n\"))\n\ncat(\"🔴 ALERTAS CRÍTICAS:\\n\")\ncat(\"-------------------\\n\")\ncat(paste(\"• Proveedores con fraccionamiento:\", nrow(casos_fraccionamiento), \"\\n\"))\ncat(paste(\"• Órdenes con sobreprecio:\", nrow(ordenes_precio_anomalo), \"\\n\"))\ncat(paste(\"• Sobreprecio máximo detectado:\", \n          round(max(ordenes_precio_anomalo$Sobreprecio_Porcentaje), 1), \"%\\n\"))\ncat(paste(\"• Proveedores nuevos (2023+) con contratos:\", nrow(proveedores_nuevos), \"\\n\"))\ncat(paste(\"• Concentración fin de año promedio:\", \n          round(mean(concentracion_fin_año$Porcentaje_Fin_Año), 1), \"%\\n\\n\"))\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n# Cargar librerías necesarias\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(igraph)\nlibrary(visNetwork)\n\n\n# 1. LIMPIEZA Y PREPARACIÓN DE DATOS\n\n\n# Cargar los datos\ndatos <- read_excel(\"DRTC-H.xlsx\")\n\n\n# Corregir nombres de columnas (quitar acentos y caracteres especiales)\nnames(datos) <- c(\"N\", \"Entidad\", \"Tipo_Orden\", \"Numero_Orden\", \"Tipo_Contratacion\",\n                  \"Fecha_Emision\", \"Fecha_Compromiso\", \"Monto\", \"RUC\", \n                  \"Razon_Social\", \"Estado\", \"Estado_Registro\", \"Observaciones\")\n\n# Convertir fechas a formato Date\ndatos <- datos %>%\n  mutate(\n    Fecha_Emision = as.Date(Fecha_Emision),\n    Fecha_Compromiso = as.Date(Fecha_Compromiso)\n  )\n\n\n# Convertir montos a numérico\ndatos <- datos %>%\n  mutate(\n    Monto_limpio = as.numeric(gsub(\",\", \"\", gsub(\"^S/\\\\. \", \"\", Monto)))\n  )\n\n\n\n# Eliminar filas con montos nulos si las hay\ndatos <- datos %>% filter(!is.na(Monto_limpio))\n\n\ndatos <- datos %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 15, \n                               paste0(substr(Razon_Social, 1, 12), \"...\"), \n                               Razon_Social))\ndatos <- datos %>%\n  mutate(Contratacion_Corto = ifelse(nchar(Tipo_Contratacion) > 20, \n                               paste0(substr(Tipo_Contratacion, 1, 15), \"...\"), \n                               Tipo_Contratacion))\n```\n\n```{r}\n# ========================================\n# 1. RESUMEN Y DESCRIPCIÓN DE DATOS\n# ========================================\n\ncat(\"\\n=====================================\\n\")\ncat(\"1. RESUMEN ESTADÍSTICO GENERAL\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Estadísticas básicas de montos\ncat(\"ESTADÍSTICAS DE MONTOS:\\n\")\ncat(\"------------------------\\n\")\nsummary_montos <- summary(datos$Monto_limpio)\nprint(summary_montos)\n\ncat(\"\\n\\nESTADÍSTICAS ADICIONALES:\\n\")\ncat(\"------------------------\\n\")\nestadisticas_adicionales <- datos %>%\n  summarise(\n    Total_Ordenes = n(),\n    Total_Proveedores = n_distinct(RUC),\n    Total_Monto = sum(Monto_limpio),\n    Promedio_Orden = mean(Monto_limpio),\n    Mediana_Orden = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Coef_Variacion = sd(Monto_limpio) / mean(Monto_limpio) * 100,\n    Monto_Min = min(Monto_limpio),\n    Monto_Max = max(Monto_limpio),\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = IQR(Monto_limpio)\n  )\n\nprint(t(estadisticas_adicionales))\n```\n\n```{r}\n# A. Índice de Herfindahl-Hirschman (IHH) para medir concentración del mercado\nconcentracion_proveedores <- datos %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Participacion_Mercado = (Monto_Total / sum(Monto_Total)) * 100,\n    Participacion_Cuadrado = Participacion_Mercado^2\n  ) %>%\n  arrange(desc(Monto_Total))\n\n# Calcular IHH (>2500 = altamente concentrado, señal de alerta)\nIHH <- sum(concentracion_proveedores$Participacion_Cuadrado)\nprint(paste(\"Índice Herfindahl-Hirschman:\", round(IHH, 2)))\n```\n\n```{r}\n# B. Análisis de Pareto - 80/20\nconcentracion_proveedores <- concentracion_proveedores %>%\n  mutate(\n    Acumulado_Monto = cumsum(Monto_Total),\n    Porcentaje_Acumulado = (Acumulado_Monto / sum(Monto_Total)) * 100,\n    Ranking = row_number()\n  )\n\n# ¿Cuántos proveedores concentran el 80% del gasto?\nproveedores_80 <- concentracion_proveedores %>%\n  filter(Porcentaje_Acumulado <= 80) %>%\n  nrow()\n\nprint(paste(\"Proveedores que concentran 80% del gasto:\", proveedores_80))\n\n```\n\n```{r}\n# Gráfico de concentración\ngrafico_pareto <- ggplot(concentracion_proveedores %>% head(20)) +\n  geom_col(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n               y = Monto_Total/1000000), \n           fill = \"#e74c3c\", alpha = 0.8) +\n  geom_line(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100,\n                group = 1), \n            color = \"#2c3e50\", linewidth = 1.2) +\n  geom_point(aes(x = reorder(substr(Razon_Social, 1, 20), -Monto_Total), \n                 y = Porcentaje_Acumulado * max(Monto_Total/1000000) / 100),\n             color = \"#2c3e50\", size = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~./max(concentracion_proveedores$Monto_Total/1000000)*100, \n                        name = \"% Acumulado\")\n  ) +\n  labs(title = \"Análisis de Pareto - Concentración de Proveedores\",\n       subtitle = paste(\"IHH =\", round(IHH, 0), \"- Mercado\", \n                       ifelse(IHH > 2500, \"ALTAMENTE CONCENTRADO\", \"moderado\")),\n       x = \"Proveedor\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngrafico_pareto\n```\n\n```{r}\nproveedores_sospechosos <- concentracion_proveedores %>%\n  mutate(\n    # Bandera 1: Proveedor nuevo con contratos grandes\n    Nueva_Empresa = as.numeric(Primera_Orden - as.Date(\"2023-01-01\")) < 365,\n    Contrato_Grande = Monto_Total > quantile(Monto_Total, 0.75),\n    \n    # Bandera 2: Solo una orden pero monto alto\n    Una_Sola_Orden = Num_Ordenes == 1,\n    Monto_Sospechoso = Monto_Total > quantile(Monto_Total, 0.90),\n    \n    # Bandera 3: Actividad concentrada en periodo corto\n    Dias_Activo = as.numeric(Ultima_Orden - Primera_Orden),\n    Actividad_Corta = Dias_Activo < 30 & Num_Ordenes > 1,\n    \n    # Score de riesgo\n    Score_Riesgo = Nueva_Empresa * 2 + Contrato_Grande + Una_Sola_Orden * 2 + \n                   Monto_Sospechoso * 3 + Actividad_Corta * 2\n  ) %>%\n  filter(Score_Riesgo >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Primera_Orden, \n         Dias_Activo, Score_Riesgo) %>%\n  arrange(desc(Score_Riesgo))\n\nprint(\"PROVEEDORES DE ALTO RIESGO (Posibles empresas fantasma):\")\nprint(head(proveedores_sospechosos, 10))\n```\n\n```{r}\n# Detectar órdenes fraccionadas (mismo proveedor, fechas cercanas, montos similares)\nfraccionamiento <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Monto_Anterior = lag(Monto_limpio),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    \n    # Detectar si es posible fraccionamiento\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE)\n\ncasos_fraccionamiento <- fraccionamiento %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos_Detectados = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos_Detectados))\n\nprint(\"POSIBLES CASOS DE FRACCIONAMIENTO:\")\nprint(head(casos_fraccionamiento, 10))\n```\n\n```{r}\n# ========================================\n# 4. ANÁLISIS TEMPORAL DE ANOMALÍAS\n# ========================================\n\n# A. Detectar picos inusuales de gasto\nanalisis_temporal <- datos %>%\n  mutate(\n    Año_Mes = floor_date(Fecha_Emision, \"month\")\n  ) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Monto_Promedio_Orden = mean(Monto_limpio),\n    .groups = 'drop'\n  )\n\n# Calcular límites de control estadístico (3 sigmas)\nmedia_mensual <- mean(analisis_temporal$Monto_Mensual)\nsd_mensual <- sd(analisis_temporal$Monto_Mensual)\nlimite_superior <- media_mensual + 3 * sd_mensual\n\nmeses_anomalos <- analisis_temporal %>%\n  filter(Monto_Mensual > limite_superior) %>%\n  mutate(\n    Desviacion_Estandar = (Monto_Mensual - media_mensual) / sd_mensual\n  )\n\nprint(\"MESES CON GASTOS ANÓMALOS (>3 sigmas):\")\nprint(meses_anomalos)\n\n```\n\n```{r}\n# B. Análisis de estacionalidad sospechosa\ndatos_con_periodo <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Año = year(Fecha_Emision)\n  )\n\n# Detectar si hay concentración en fin de año (típico en malversación)\ngasto_fin_año <- datos_con_periodo %>%\n  filter(Mes %in% c(11,12)) %>%\n  group_by(Año) %>%\n  summarise(Monto_Fin_Año = sum(Monto_limpio))\n\ngasto_total_anual <- datos_con_periodo %>%\n  group_by(Año) %>%\n  summarise(Monto_Total_Año = sum(Monto_limpio))\n\nconcentracion_fin_año <- gasto_fin_año %>%\n  left_join(gasto_total_anual, by = \"Año\") %>%\n  mutate(\n    Porcentaje_Fin_Año = (Monto_Fin_Año / Monto_Total_Año) * 100\n  )\n\nprint(\"CONCENTRACIÓN DE GASTO EN FIN DE AÑO:\")\nprint(concentracion_fin_año)\n```\n\n```{r}\n# ========================================\n# 5. ANÁLISIS DE REDES Y COLUSIÓN\n# ========================================\n\n# Crear matriz de co-ocurrencia temporal\nventana_dias <- 30  # Ventana de tiempo para detectar co-ocurrencias\n\ncoocurrencias <- datos %>%\n  select(RUC, Fecha_Emision, Monto_limpio) %>%\n  cross_join(datos %>% select(RUC2 = RUC, Fecha2 = Fecha_Emision)) %>%\n  filter(\n    RUC != RUC2,\n    abs(as.numeric(Fecha_Emision - Fecha2)) <= ventana_dias\n  ) %>%\n  group_by(RUC, RUC2) %>%\n  summarise(\n    Veces_Juntos = n(),\n    .groups = 'drop'\n  ) %>%\n  filter(Veces_Juntos >= 3)  # Al menos 3 co-ocurrencias\n\n# Identificar clusters de proveedores\nif(nrow(coocurrencias) > 0) {\n  grafo <- graph_from_data_frame(coocurrencias, directed = FALSE)\n  comunidades <- cluster_louvain(grafo)\n  \n  clusters_sospechosos <- data.frame(\n    RUC = names(membership(comunidades)),\n    Cluster = membership(comunidades)\n  ) %>%\n    group_by(Cluster) %>%\n    summarise(\n      Miembros = n(),\n      RUCs = paste(RUC, collapse = \", \")\n    ) %>%\n    filter(Miembros >= 3)\n  \n  print(\"POSIBLES CARTELES (3+ proveedores relacionados):\")\n  print(clusters_sospechosos)\n}\n```\n\n```{r}\n# ========================================\n# 6. ANÁLISIS DE PRECIOS ANÓMALOS\n# ========================================\n\n# Agrupar por tipo de contratación para comparar precios\nanalisis_precios <- datos %>%\n  group_by(Tipo_Contratacion) %>%\n  mutate(\n    Q1 = quantile(Monto_limpio, 0.25),\n    Q3 = quantile(Monto_limpio, 0.75),\n    IQR = Q3 - Q1,\n    Limite_Superior = Q3 + 1.5 * IQR,\n    Limite_Inferior = Q1 - 1.5 * IQR,\n    Es_Outlier = Monto_limpio > Limite_Superior | Monto_limpio < Limite_Inferior\n  )\n\nordenes_precio_anomalo <- analisis_precios %>%\n  filter(Es_Outlier == TRUE) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion, \n         Fecha_Emision, Monto_limpio, Limite_Superior) %>%\n  mutate(\n    Sobreprecio_Porcentaje = ((Monto_limpio - Limite_Superior) / Limite_Superior) * 100\n  ) %>%\n  filter(Sobreprecio_Porcentaje > 0) %>%\n  arrange(desc(Sobreprecio_Porcentaje))\n\nprint(\"ÓRDENES CON SOBREPRECIOS DETECTADOS:\")\nprint(head(ordenes_precio_anomalo, 15))\n\ntop_sobreprecios <- ordenes_precio_anomalo %>%\n  arrange(desc(Sobreprecio_Porcentaje)) %>%\n  head(5) %>%\n  select(Numero_Orden, RUC, Razon_Social, Tipo_Contratacion,\n         Fecha_Emision, Monto_limpio, Limite_Superior, Sobreprecio_Porcentaje)\n\n# Mostrar en consola\nprint(top_sobreprecios)\n```\n\n```{r}\n# ========================================\n# 7. ANÁLISIS DE CAMBIO DE GESTIÓN\n# ========================================\n\n# Comparar patrones antes y después del cambio de gestión (2023)\nantes_cambio <- datos %>%\n  filter(Fecha_Emision < as.Date(\"2023-01-01\"))\n\ndespues_cambio <- datos %>%\n  filter(Fecha_Emision >= as.Date(\"2022-01-01\"))\n\n# Proveedores nuevos post-cambio\nproveedores_nuevos <- despues_cambio %>%\n  filter(!(RUC %in% antes_cambio$RUC)) %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Aparicion = min(Fecha_Emision),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\nprint(\"PROVEEDORES NUEVOS POST-CAMBIO DE GESTIÓN (Top 10):\")\nprint(head(proveedores_nuevos, 10))\n```\n\n```{r}\n# ========================================\n# 8. GENERACIÓN DE SCORE INTEGRAL DE RIESGO\n# ========================================\n\n\nscore_integral <- concentracion_proveedores %>%\n  left_join(\n    casos_fraccionamiento %>% select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    proveedores_nuevos %>% select(RUC, Es_Nuevo_2023 = Primera_Aparicion),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Es_Nuevo_2023 = !is.na(Es_Nuevo_2023),\n    \n    # Calcular score de riesgo integral\n    Score_Concentracion = ifelse(Participacion_Mercado > 5, 3,\n                                 ifelse(Participacion_Mercado > 2, 2,\n                                       ifelse(Participacion_Mercado > 1, 1, 0))),\n    Score_Fraccionamiento = ifelse(Casos_Fraccionamiento > 5, 3,\n                                   ifelse(Casos_Fraccionamiento > 2, 2,\n                                         ifelse(Casos_Fraccionamiento > 0, 1, 0))),\n    Score_Nuevo = Es_Nuevo_2023 * 2,\n    Score_Una_Orden = (Num_Ordenes == 1 & Monto_Total > quantile(Monto_Total, 0.75)) * 3,\n    \n    SCORE_RIESGO_TOTAL = Score_Concentracion + Score_Fraccionamiento + \n                         Score_Nuevo + Score_Una_Orden\n  ) %>%\n  filter(SCORE_RIESGO_TOTAL >= 3) %>%\n  select(RUC, Razon_Social, Monto_Total, Num_Ordenes, Participacion_Mercado,\n         Casos_Fraccionamiento, Es_Nuevo_2023, SCORE_RIESGO_TOTAL) %>%\n  arrange(desc(SCORE_RIESGO_TOTAL), desc(Monto_Total))\n\n\nprint(head(score_integral, 20))\n\n```\n\n```{r}\n# ========================================\n# 9. VISUALIZACIONES CLAVE\n# ========================================\n\n# A. Timeline de anomalías\ntimeline_anomalias <- ggplot(analisis_temporal, aes(x = Año_Mes, y = Monto_Mensual/1000000)) +\n  geom_line(color = \"#34495e\", linewidth = 1) +\n  geom_point(data = meses_anomalos, \n            aes(x = Año_Mes, y = Monto_Mensual/1000000),\n            color = \"red\", size = 4) +\n  geom_hline(yintercept = limite_superior/1000000, \n            linetype = \"dashed\", color = \"red\", alpha = 0.5) +\n  geom_vline(xintercept = as.Date(\"2023-01-01\"), \n            linetype = \"dashed\", color = \"blue\", alpha = 0.5) +\n  annotate(\"text\", x = as.Date(\"2023-01-01\"), y = max(analisis_temporal$Monto_Mensual/1000000),\n          label = \"Cambio de Gestión\", angle = 90, vjust = -0.5, color = \"blue\") +\n  labs(title = \"Timeline de Gastos con Detección de Anomalías\",\n       subtitle = \"Línea roja = Límite de 3 sigmas | Puntos rojos = Meses anómalos\",\n       x = \"Mes\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\ntimeline_anomalias\n```\n\n```{r}\n# B. Mapa de calor de riesgo por mes y tipo\nmapa_calor <- datos_con_periodo %>%\n  group_by(Año, Mes, Contratacion_Corto) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio)/1000000,\n    .groups = 'drop'\n  ) %>%\n  ggplot(aes(x = factor(Mes), y = Contratacion_Corto, fill = Monto_Total)) +\n  geom_tile() +\n  facet_wrap(~Año) +\n  scale_fill_gradient2(low = \"white\", mid = \"orange\", high = \"red\",\n                       midpoint = median(datos_con_periodo$Monto_limpio/1000000)) +\n  labs(title = \"Mapa de Calor: Concentración de Gastos\",\n       x = \"Mes\", y = \"Tipo de Contratación\",\n       fill = \"Monto\\n(Millones S/)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nmapa_calor\n```\n\n```{r}\n# Clasificación por tipo de proveedor\ndatos <- datos %>%\n  mutate(Tipo_Proveedor = case_when(\n    str_starts(RUC, \"10\") ~ \"Persona Natural\",\n    str_starts(RUC, \"20\") ~ \"Persona Jurídica\",\n    TRUE ~ \"Otro\"\n  ))\n\n# Tabla de frecuencias por tipo de proveedor\ncat(\"\\n\\nTABLA DE FRECUENCIAS POR TIPO DE PROVEEDOR:\\n\")\ncat(\"-------------------------------------------\\n\")\ntabla_tipo_proveedor <- datos %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Porcentaje_Ordenes = n() / nrow(datos) * 100,\n    Monto_Total = sum(Monto_limpio),\n    Porcentaje_Monto = sum(Monto_limpio) / sum(datos$Monto_limpio) * 100,\n    Monto_Promedio = mean(Monto_limpio),\n    Num_Proveedores_Unicos = n_distinct(RUC)\n  ) %>%\n  mutate(across(where(is.numeric), ~round(., 2)))\n\nprint(tabla_tipo_proveedor)\n```\n\n```{r}\n# Distribución temporal\ncat(\"\\n\\nDISTRIBUCIÓN TEMPORAL:\\n\")\ncat(\"----------------------\\n\")\nrango_fechas <- datos %>%\n  summarise(\n    Fecha_Inicio = min(Fecha_Emision),\n    Fecha_Fin = max(Fecha_Emision),\n    Dias_Totales = as.numeric(max(Fecha_Emision) - min(Fecha_Emision)),\n    Años_Completos = n_distinct(year(Fecha_Emision))\n  )\nprint(rango_fechas)\n\ndatos <- datos %>%\n  mutate(Año = year(Fecha_Emision))\n\n# Análisis por año\ncomparacion_anual <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    Mediana_Monto = median(Monto_limpio),\n    Desv_Estandar = sd(Monto_limpio),\n    Proveedores_Unicos = n_distinct(RUC),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    Ordenes_Por_Proveedor = n() / n_distinct(RUC),\n    Monto_Max = max(Monto_limpio),\n    Monto_Min = min(Monto_limpio)\n  ) %>%\n  arrange(Año)\n\nprint(comparacion_anual)\n```\n\n```{r}\n# Calcular tasas de crecimiento\ncomparacion_anual <- comparacion_anual %>%\n  mutate(\n    Crecimiento_Monto_Pct = (Monto_Total - lag(Monto_Total)) / lag(Monto_Total) * 100,\n    Crecimiento_Ordenes_Pct = (Num_Ordenes - lag(Num_Ordenes)) / lag(Num_Ordenes) * 100,\n    Crecimiento_Proveedores_Pct = (Proveedores_Unicos - lag(Proveedores_Unicos)) / lag(Proveedores_Unicos) * 100\n  )\n\ncat(\"\\nTASAS DE CRECIMIENTO ANUAL:\\n\")\ncat(\"---------------------------\\n\")\nprint(comparacion_anual %>% \n      select(Año, Crecimiento_Monto_Pct, Crecimiento_Ordenes_Pct, Crecimiento_Proveedores_Pct))\n```\n\n```{r}\n# Análisis mensual para detectar picos\nanalisis_mensual <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes) %>%\n  summarise(\n    Monto_Mensual = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Cambio_Mensual = (Monto_Mensual - lag(Monto_Mensual)) / lag(Monto_Mensual) * 100\n  )\n\n# Identificar picos y caídas (>50% cambio)\npicos_caidas <- analisis_mensual %>%\n  filter(abs(Cambio_Mensual) > 50, !is.na(Cambio_Mensual)) %>%\n  mutate(\n    Tipo = ifelse(Cambio_Mensual > 0, \"PICO\", \"CAÍDA\"),\n    Mes_Año = format(Año_Mes, \"%b-%Y\")\n  )\nprint(picos_caidas %>% select(Mes_Año, Tipo, Cambio_Mensual, Monto_Mensual))\n```\n\n```{r}\n# Gráfico de evolución anual\ngrafico_evolucion <- ggplot(comparacion_anual, aes(x = factor(Año))) +\n  geom_bar(aes(y = Monto_Total/1000000), stat = \"identity\", fill = \"#3498db\", alpha = 0.7) +\n  geom_line(aes(y = Num_Ordenes/10, group = 1), color = \"#e74c3c\", linewidth = 2) +\n  geom_point(aes(y = Num_Ordenes/10), color = \"#e74c3c\", linewidth = 3) +\n  scale_y_continuous(\n    name = \"Monto Total (Millones S/)\",\n    sec.axis = sec_axis(~.*10, name = \"Número de Órdenes\")\n  ) +\n  labs(\n    title = \"Evolución Anual del Gasto y Órdenes\",\n    subtitle = \"Barras = Monto Total | Línea = Número de Órdenes\",\n    x = \"Año\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.text.x = element_text(size = 11)\n  )\n\nprint(grafico_evolucion)\n\n```\n\n```{r}\npresupuesto_oficial <- data.frame(\n  Año = c(2023, 2024, 2025),\n  PIM = c(1999726251, 1961841636, 1905495522),  # Presupuesto Institucional Modificado\n  Ejecutado_Oficial = c(1839965157, 1866031196, 1232661856),  # Según reporte oficial\n  Porcentaje_Oficial = c(92.0, 95.1, 64.7)\n)\n\n# Calcular gasto real detectado\ngasto_real_detectado <- datos %>%\n  group_by(Año) %>%\n  summarise(\n    Gasto_Detectado = sum(Monto_limpio),\n    .groups = 'drop'\n  )\n\nanalisis_presupuesto <- presupuesto_oficial %>%\n  left_join(gasto_real_detectado, by = \"Año\") %>%\n  mutate(\n    Gasto_Detectado = replace_na(Gasto_Detectado, 0),\n    Porcentaje_Detectado = (Gasto_Detectado / PIM) * 100,\n    Diferencia_Oficial_Detectado = Ejecutado_Oficial - Gasto_Detectado,\n    Porcentaje_No_Registrado = (Diferencia_Oficial_Detectado / Ejecutado_Oficial) * 100\n  )\n\nprint(analisis_presupuesto)\n```\n\n```{r}\ndatos_graf_presupuesto <- analisis_presupuesto %>%\n  select(Año, PIM, Ejecutado_Oficial, Gasto_Detectado) %>%\n  pivot_longer(cols = c(PIM, Ejecutado_Oficial, Gasto_Detectado), \n               names_to = \"Tipo\", values_to = \"Monto\") %>%\n  mutate(Tipo = factor(Tipo, levels = c(\"PIM\", \"Ejecutado_Oficial\", \"Gasto_Detectado\")))\n\ngrafico_presupuesto <- ggplot(datos_graf_presupuesto, \n                              aes(x = factor(Año), y = Monto/1000000, fill = Tipo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha = 0.8) +\n  scale_fill_manual(values = c(\"PIM\" = \"#95a5a6\", \n                               \"Ejecutado_Oficial\" = \"#3498db\", \n                               \"Gasto_Detectado\" = \"#e74c3c\"),\n                    labels = c(\"Presupuesto Modificado\", \"Ejecutado (Oficial)\", \"Detectado (Datos)\")) +\n  labs(\n    title = \"Comparación: Presupuesto vs. Ejecución vs. Detectado\",\n    subtitle = \"Diferencias significativas sugieren gastos no registrados o mal clasificados\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo\"\n  ) +\n  theme_minimal() +\n  geom_text(aes(label = round(Monto/1000000, 0)), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5, size = 3)\n\nprint(grafico_presupuesto)\n```\n\n```{r}\n# ========================================\n# 4. ANÁLISIS DE FRACCIONAMIENTO POR TIPO\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\ncat(\"4. FRACCIONAMIENTO POR TIPO DE PROVEEDOR\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Detectar fraccionamiento por tipo de proveedor\nfraccionamiento_por_tipo <- datos %>%\n  arrange(RUC, Fecha_Emision) %>%\n  group_by(RUC) %>%\n  mutate(\n    Dias_Entre_Ordenes = as.numeric(Fecha_Emision - lag(Fecha_Emision)),\n    Diferencia_Monto = abs(Monto_limpio - lag(Monto_limpio)),\n    Posible_Fraccionamiento = Dias_Entre_Ordenes <= 7 & \n                              Diferencia_Monto < (Monto_limpio * 0.2) &\n                              !is.na(Dias_Entre_Ordenes)\n  ) %>%\n  filter(Posible_Fraccionamiento == TRUE) %>%\n  left_join(datos %>% select(RUC, Tipo_Proveedor) %>% distinct(), by = \"RUC\") %>% \n  mutate(Tipo_Proveedor = coalesce(Tipo_Proveedor.x, Tipo_Proveedor.y)) %>%\nselect(-Tipo_Proveedor.x, -Tipo_Proveedor.y)\n\nresumen_fraccionamiento <- fraccionamiento_por_tipo %>%\n  group_by(Tipo_Proveedor) %>%\n  summarise(\n    Casos_Fraccionamiento = n(),\n    Monto_Total_Fraccionado = sum(Monto_limpio),\n    Monto_Promedio_Fraccion = mean(Monto_limpio),\n    Mediana_Fraccion = median(Monto_limpio),\n    Proveedores_Involucrados = n_distinct(RUC),\n    Dias_Promedio_Entre_Ordenes = mean(Dias_Entre_Ordenes, na.rm = TRUE),\n    .groups = 'drop'\n  ) %>%\n  mutate(\n    Casos_Por_Proveedor = Casos_Fraccionamiento / Proveedores_Involucrados\n  )\n\nprint(resumen_fraccionamiento)\n\n```\n\n```{r}\n# Patrones de fraccionamiento\ncat(\"\\n\\nPATRONES DE FRACCIONAMIENTO:\\n\")\ncat(\"-----------------------------\\n\")\n\n# Para personas naturales\nfraccion_naturales <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Naturales con Fraccionamiento:\\n\")\nprint(fraccion_naturales)\n```\n\n```{r}\n# Para personas jurídicas\nfraccion_juridicas <- fraccionamiento_por_tipo %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Casos = n(),\n    Monto_Total = sum(Monto_limpio),\n    Dias_Promedio = mean(Dias_Entre_Ordenes),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Casos)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Personas Jurídicas con Fraccionamiento:\\n\")\nprint(fraccion_juridicas)\n\n```\n\n```{r}\nggplot(datos, aes(x = Contratacion_Corto, y = Monto_limpio/1000, fill = Contratacion_Corto)) +\n  geom_boxplot(alpha = 0.7, outlier.color = \"red\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = \"Distribución de Montos por Tipo de Contratación\",\n       x = \"Tipo de Contratación\", y = \"Monto (en miles de S/.)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"none\")\n\n```\n\n```{r}\ncat(\"\\n\\n=====================================\\n\")\ncat(\"5. ANÁLISIS DE RELACIONES ENTRE VARIABLES\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Análisis por tipo de contratación\nrelacion_tipo_contratacion <- datos %>%\n  group_by(Tipo_Contratacion, Tipo_Proveedor) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Monto_Promedio = mean(Monto_limpio),\n    CV = sd(Monto_limpio) / mean(Monto_limpio),\n    .groups = 'drop'\n  ) %>%\n  arrange(desc(Monto_Total))\n\ncat(\"RELACIÓN TIPO CONTRATACIÓN - TIPO PROVEEDOR:\\n\")\ncat(\"--------------------------------------------\\n\")\nprint(head(relacion_tipo_contratacion, 15))\n```\n\n```{r}\ndatos_correlacion <- datos %>%\n  mutate(\n    Mes = month(Fecha_Emision),\n    Año = year(Fecha_Emision),\n    Trimestre = quarter(Fecha_Emision),\n    Es_Fin_Año = ifelse(Mes >= 11, 1, 0),\n    Es_Natural = ifelse(Tipo_Proveedor == \"Persona Natural\", 1, 0)\n  )\n\n# Calcular correlaciones\ncorrelaciones <- datos_correlacion %>%\n  select(Monto_limpio, Mes, Trimestre, Es_Fin_Año, Es_Natural) %>%\n  cor(use = \"complete.obs\")\nprint(round(correlaciones, 3))\n```\n\n```{r}\npatrones_sospechosos <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC) %>%\n  summarise(\n    Num_Ordenes = n(),\n    Monto_Total = sum(Monto_limpio),\n    Tipos_Contratacion_Diferentes = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  filter(Tipos_Contratacion_Diferentes >= 3, Monto_Total > 100000) %>%\n  arrange(desc(Monto_Total))\nprint(head(patrones_sospechosos, 10))\n```\n\n```{r}\ncat(\"\\n\\n=====================================\\n\")\ncat(\"6. DISTRIBUCIÓN DEL GASTO POR TIPO DE CONTRATACIÓN\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Distribución por año y tipo\ndistribucion_tipo_año <- datos %>%\n  group_by(Año, Tipo_Contratacion) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    .groups = 'drop'\n  ) %>%\n  group_by(Año) %>%\n  mutate(\n    Porcentaje_Monto = Monto_Total / sum(Monto_Total) * 100,\n    Porcentaje_Ordenes = Num_Ordenes / sum(Num_Ordenes) * 100\n  )\n\n# Tabla resumen\ntabla_distribucion <- distribucion_tipo_año %>%\n  select(Año, Tipo_Contratacion, Monto_Total, Porcentaje_Monto) %>%\n  arrange(Año, desc(Monto_Total)) %>%\n  group_by(Año) %>%\n  slice_head(n = 5)  # Top 5 por año\n\nprint(tabla_distribucion)\n```\n\n```{r}\ngraf_absolutos <- ggplot(distribucion_tipo_año, \n                         aes(x = factor(Año), y = Monto_Total/1000000, \n                             fill = Tipo_Contratacion)) +  # Eliminar reorder()\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Distribución del Gasto por Tipo de Contratación (Montos Absolutos)\",\n    x = \"Año\",\n    y = \"Monto (Millones S/)\",\n    fill = \"Tipo de Contratación\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set3\")\n\nprint(graf_absolutos)\n```\n\n```{r}\ncambios_distribucion <- distribucion_tipo_año %>%\n  group_by(Tipo_Contratacion) %>%\n  arrange(Año) %>%\n  mutate(\n    Cambio_Porcentaje = Porcentaje_Monto - lag(Porcentaje_Monto)\n  ) %>%\n  filter(abs(Cambio_Porcentaje) > 5, !is.na(Cambio_Porcentaje))\n\ncat(\"\\n\\nCAMBIOS SIGNIFICATIVOS EN DISTRIBUCIÓN (>5 puntos porcentuales):\\n\")\ncat(\"----------------------------------------------------------------\\n\")\nprint(cambios_distribucion %>% \n      select(Tipo_Contratacion, Año, Porcentaje_Monto, Cambio_Porcentaje))\n\n```\n\n```{r}\n# ========================================\n# 7. RANKING DE PROVEEDORES RELEVANTES\n# ========================================\n\ncat(\"\\n\\n=====================================\\n\")\ncat(\"7. RANKING DE PROVEEDORES RELEVANTES\\n\")\ncat(\"=====================================\\n\\n\")\n\n# Top 20 Personas Jurídicas\ntop_juridicas <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Jurídica\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"TOP 20 PERSONAS JURÍDICAS:\\n\")\ncat(\"--------------------------\\n\")\nprint(top_juridicas %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n\n# Top 20 Personas Naturales\ntop_naturales <- datos %>%\n  filter(Tipo_Proveedor == \"Persona Natural\") %>%\n  group_by(RUC, Razon_Social) %>%\n  summarise(\n    Monto_Total = sum(Monto_limpio),\n    Num_Ordenes = n(),\n    Primera_Orden = min(Fecha_Emision),\n    Ultima_Orden = max(Fecha_Emision),\n    Tipos_Contratacion = n_distinct(Tipo_Contratacion),\n    .groups = 'drop'\n  ) %>%\n  # Agregar alertas\n  left_join(\n    casos_fraccionamiento %>% \n      select(RUC, Casos_Fraccionamiento = Casos_Detectados),\n    by = \"RUC\"\n  ) %>%\n  left_join(\n    ordenes_precio_anomalo %>%\n      group_by(RUC) %>%\n      summarise(Ordenes_Sobreprecio = n(), .groups = 'drop'),\n    by = \"RUC\"\n  ) %>%\n  mutate(\n    Casos_Fraccionamiento = replace_na(Casos_Fraccionamiento, 0),\n    Ordenes_Sobreprecio = replace_na(Ordenes_Sobreprecio, 0),\n    Alertas_Totales = Casos_Fraccionamiento + Ordenes_Sobreprecio,\n    Es_Nuevo_2023 = Primera_Orden >= as.Date(\"2023-01-01\")\n  ) %>%\n  arrange(desc(Monto_Total)) %>%\n  head(20)\n\ncat(\"\\n\\nTOP 20 PERSONAS NATURALES:\\n\")\ncat(\"--------------------------\\n\")\nprint(top_naturales %>% \n      select(RUC, Razon_Social, Monto_Total, Num_Ordenes, \n             Alertas_Totales, Es_Nuevo_2023) %>%\n      mutate(Monto_Total = round(Monto_Total, 0)))\n\n# Proveedores con múltiples alertas\nmulti_alertas <- rbind(\n  top_juridicas %>% mutate(Tipo = \"Jurídica\"),\n  top_naturales %>% mutate(Tipo = \"Natural\")\n) %>%\n  filter(Alertas_Totales >= 3) %>%\n  arrange(desc(Alertas_Totales), desc(Monto_Total))\n\ncat(\"\\n\\nPROVEEDORES CON MÚLTIPLES ALERTAS (>=3):\\n\")\ncat(\"----------------------------------------\\n\")\nprint(multi_alertas %>% \n      select(Tipo, RUC, Razon_Social, Monto_Total, \n             Casos_Fraccionamiento, Ordenes_Sobreprecio, Alertas_Totales))\n\n```\n\n```{r}\nlibrary(treemapify)\n\nconcentracion_corto <- concentracion_proveedores %>% \n  head(20) %>%\n  mutate(Nombre_Corto = ifelse(nchar(Razon_Social) > 25,\n                                paste0(substr(Razon_Social, 1, 22), \"...\"),\n                                Razon_Social))\n\nggplot(concentracion_corto,\n       aes(area = Monto_Total, fill = Participacion_Mercado, label = Nombre_Corto)) +\n  geom_treemap() +\n  geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE, \n                    reflow = TRUE) +  # Agregar reflow\n  labs(title = \"Top 20 Proveedores por Monto (Treemap)\",\n       subtitle = \"Área proporcional al monto total\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  theme_minimal()\n\n```\n\n```{r}\nggplot(score_integral, aes(x = Num_Ordenes, y = Monto_Total/1000000,\n                           size = Participacion_Mercado, color = SCORE_RIESGO_TOTAL)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(3,12)) +\n  scale_color_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Mapa de Riesgo de Proveedores\",\n       x = \"Número de Órdenes\", y = \"Monto Total (Millones S/)\",\n       size = \"% Participación en el mercado\", color = \"Score de Riesgo\") +\n  theme_minimal()\n\n```\n\n```{r}\nserie_tiempo_contratacion <- datos %>%\n  mutate(Año_Mes = floor_date(Fecha_Emision, \"month\")) %>%\n  group_by(Año_Mes, Tipo_Contratacion) %>%\n  summarise(Monto_Mensual = sum(Monto_limpio), .groups = \"drop\")\n\nTiempo_contrataciones = ggplot(serie_tiempo_contratacion, aes(x = Año_Mes, y = Monto_Mensual/1000000,\n                                      color = Tipo_Contratacion)) +\n  geom_line(linewidth = 1.2) +\n  labs(title = \"Evolución Mensual del Gasto por Tipo de Contratación\",\n       x = \"Fecha\", y = \"Monto (Millones S/)\") +\n  theme_minimal()\n\nggsave(\"mi_grafico_largo.png\", plot = Tiempo_contrataciones, width = 10, height = 8, units = \"in\", dpi = 300)\n```\n\n```{r}\ngasto_proveedor_anual <- datos %>%\n  group_by(Año, Tipo_Proveedor) %>%\n  summarise(Monto_Total = sum(Monto_limpio), .groups = \"drop\")\n\nggplot(gasto_proveedor_anual, aes(x = factor(Año), y = Monto_Total/1000000,\n                                  fill = Tipo_Proveedor)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Distribución del Gasto por Tipo de Proveedor\",\n       x = \"Año\", y = \"Monto (Millones S/)\") +\n  scale_fill_manual(values = c(\"Persona Natural\" = \"#f39c12\",\n                               \"Persona Jurídica\" = \"#2980b9\",\n                               \"Otro\" = \"#7f8c8d\")) +\n  theme_minimal()\n\n```\n\n```{r}\ncat(paste(\"✓ Total de órdenes analizadas:\", nrow(datos), \"\\n\"))\ncat(paste(\"✓ Periodo:\", min(datos$Fecha_Emision), \"a\", max(datos$Fecha_Emision), \"\\n\"))\ncat(paste(\"✓ Monto total:\", format(sum(datos$Monto_limpio), big.mark = \",\"), \"soles\\n\"))\ncat(paste(\"✓ Proveedores únicos:\", n_distinct(datos$RUC), \"\\n\\n\"))\n\ncat(\"🔴 ALERTAS CRÍTICAS:\\n\")\ncat(\"-------------------\\n\")\ncat(paste(\"• Proveedores con fraccionamiento:\", nrow(casos_fraccionamiento), \"\\n\"))\ncat(paste(\"• Órdenes con sobreprecio:\", nrow(ordenes_precio_anomalo), \"\\n\"))\ncat(paste(\"• Sobreprecio máximo detectado:\", \n          round(max(ordenes_precio_anomalo$Sobreprecio_Porcentaje), 1), \"%\\n\"))\ncat(paste(\"• Proveedores nuevos (2023+) con contratos:\", nrow(proveedores_nuevos), \"\\n\"))\ncat(paste(\"• Concentración fin de año promedio:\", \n          round(mean(concentracion_fin_año$Porcentaje_Fin_Año), 1), \"%\\n\\n\"))\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"DRTCH_RENDER.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"visual","theme":["cosmo","brand"],"title":"DRTC-H"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}