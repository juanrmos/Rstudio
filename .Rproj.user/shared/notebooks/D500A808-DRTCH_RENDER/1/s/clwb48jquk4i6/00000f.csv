"0","# ========================================"
"0","# 5. ANÁLISIS DE REDES Y COLUSIÓN"
"0","# ========================================"
"0",""
"0","# Crear matriz de co-ocurrencia temporal"
"0","ventana_dias <- 30  # Ventana de tiempo para detectar co-ocurrencias"
"0",""
"0","coocurrencias <- datos %>%"
"0","  select(RUC, Fecha_Emision, Monto_limpio) %>%"
"0","  cross_join(datos %>% select(RUC2 = RUC, Fecha2 = Fecha_Emision)) %>%"
"0","  filter("
"0","    RUC != RUC2,"
"0","    abs(as.numeric(Fecha_Emision - Fecha2)) <= ventana_dias"
"0","  ) %>%"
"0","  group_by(RUC, RUC2) %>%"
"0","  summarise("
"0","    Veces_Juntos = n(),"
"0","    .groups = 'drop'"
"0","  ) %>%"
"0","  filter(Veces_Juntos >= 3)  # Al menos 3 co-ocurrencias"
"0",""
"0","# Identificar clusters de proveedores"
"0","if(nrow(coocurrencias) > 0) {"
"0","  grafo <- graph_from_data_frame(coocurrencias, directed = FALSE)"
"0","  comunidades <- cluster_louvain(grafo)"
"0","  "
"0","  clusters_sospechosos <- data.frame("
"0","    RUC = names(membership(comunidades)),"
"0","    Cluster = membership(comunidades)"
"0","  ) %>%"
"0","    group_by(Cluster) %>%"
"0","    summarise("
"0","      Miembros = n(),"
"0","      RUCs = paste(RUC, collapse = "", "")"
"0","    ) %>%"
"0","    filter(Miembros >= 3)"
"0","  "
"0","  print(""POSIBLES CARTELES (3+ proveedores relacionados):"")"
"0","  print(clusters_sospechosos)"
"0","}"
"1","[1]"
"1"," ""POSIBLES CARTELES (3+ proveedores relacionados):"""
"1","
"
